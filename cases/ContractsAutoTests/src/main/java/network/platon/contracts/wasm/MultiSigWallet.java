package network.platon.contracts.wasm;

import com.platon.rlp.datatypes.Uint64;
import com.platon.rlp.datatypes.WasmAddress;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.web3j.abi.WasmEventEncoder;
import org.web3j.abi.WasmFunctionEncoder;
import org.web3j.abi.datatypes.WasmEvent;
import org.web3j.abi.datatypes.WasmEventParameter;
import org.web3j.abi.datatypes.WasmFunction;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.PlatonFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.WasmContract;
import org.web3j.tx.gas.GasProvider;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the org.web3j.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.13.1.5.
 */
public class MultiSigWallet extends WasmContract {
    private static String BINARY_0 = "";

    public static String BINARY = BINARY_0;

    public static final String FUNC_EXECUTE = "execute";

    public static final String FUNC_ADDOWNER = "addOwner";

    public static final String FUNC_REMOVEOWNER = "removeOwner";

    public static final String FUNC_CHANGETHRESHOLD = "changeThreshold";

    public static final String FUNC_GETISOWNER = "getIsOwner";

    public static final WasmEvent OWNERADDED_EVENT = new WasmEvent("OwnerAdded", Arrays.asList(new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress.class)));
    ;

    public static final WasmEvent OWNERREMOVED_EVENT = new WasmEvent("OwnerRemoved", Arrays.asList(new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(Uint64.class)));
    ;

    public static final WasmEvent THRESHOLDCHANGED_EVENT = new WasmEvent("ThresholdChanged", Arrays.asList(new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(Uint64.class)));
    ;

    public static final WasmEvent EXECUTED_EVENT = new WasmEvent("Executed", Arrays.asList(new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Uint64.class) , new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent RECEIVED_EVENT = new WasmEvent("Received", Arrays.asList(new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(Uint64.class) , new WasmEventParameter(WasmAddress.class)));
    ;

    protected MultiSigWallet(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected MultiSigWallet(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public List<OwnerAddedEventResponse> getOwnerAddedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(OWNERADDED_EVENT, transactionReceipt);
        ArrayList<OwnerAddedEventResponse> responses = new ArrayList<OwnerAddedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            OwnerAddedEventResponse typedResponse = new OwnerAddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OwnerAddedEventResponse> ownerAddedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OwnerAddedEventResponse>() {
            @Override
            public OwnerAddedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(OWNERADDED_EVENT, log);
                OwnerAddedEventResponse typedResponse = new OwnerAddedEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<OwnerAddedEventResponse> ownerAddedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(OWNERADDED_EVENT));
        return ownerAddedEventObservable(filter);
    }

    public List<OwnerRemovedEventResponse> getOwnerRemovedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(OWNERREMOVED_EVENT, transactionReceipt);
        ArrayList<OwnerRemovedEventResponse> responses = new ArrayList<OwnerRemovedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            OwnerRemovedEventResponse typedResponse = new OwnerRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint64) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OwnerRemovedEventResponse> ownerRemovedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OwnerRemovedEventResponse>() {
            @Override
            public OwnerRemovedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(OWNERREMOVED_EVENT, log);
                OwnerRemovedEventResponse typedResponse = new OwnerRemovedEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint64) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<OwnerRemovedEventResponse> ownerRemovedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(OWNERREMOVED_EVENT));
        return ownerRemovedEventObservable(filter);
    }

    public List<ThresholdChangedEventResponse> getThresholdChangedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(THRESHOLDCHANGED_EVENT, transactionReceipt);
        ArrayList<ThresholdChangedEventResponse> responses = new ArrayList<ThresholdChangedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            ThresholdChangedEventResponse typedResponse = new ThresholdChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint64) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ThresholdChangedEventResponse> thresholdChangedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ThresholdChangedEventResponse>() {
            @Override
            public ThresholdChangedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(THRESHOLDCHANGED_EVENT, log);
                ThresholdChangedEventResponse typedResponse = new ThresholdChangedEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint64) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<ThresholdChangedEventResponse> thresholdChangedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(THRESHOLDCHANGED_EVENT));
        return thresholdChangedEventObservable(filter);
    }

    public List<ExecutedEventResponse> getExecutedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(EXECUTED_EVENT, transactionReceipt);
        ArrayList<ExecutedEventResponse> responses = new ArrayList<ExecutedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            ExecutedEventResponse typedResponse = new ExecutedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint64) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ExecutedEventResponse> executedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ExecutedEventResponse>() {
            @Override
            public ExecutedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(EXECUTED_EVENT, log);
                ExecutedEventResponse typedResponse = new ExecutedEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint64) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
                return typedResponse;
            }
        });
    }

    public Observable<ExecutedEventResponse> executedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(EXECUTED_EVENT));
        return executedEventObservable(filter);
    }

    public List<ReceivedEventResponse> getReceivedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(RECEIVED_EVENT, transactionReceipt);
        ArrayList<ReceivedEventResponse> responses = new ArrayList<ReceivedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            ReceivedEventResponse typedResponse = new ReceivedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint64) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ReceivedEventResponse> receivedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ReceivedEventResponse>() {
            @Override
            public ReceivedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(RECEIVED_EVENT, log);
                ReceivedEventResponse typedResponse = new ReceivedEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint64) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<ReceivedEventResponse> receivedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(RECEIVED_EVENT));
        return receivedEventObservable(filter);
    }

    public static RemoteCall<MultiSigWallet> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId, Uint64 _threshold, Set<WasmAddress> _owners) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(_threshold,_owners));
        return deployRemoteCall(MultiSigWallet.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<MultiSigWallet> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId, Uint64 _threshold, Set<WasmAddress> _owners) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(_threshold,_owners));
        return deployRemoteCall(MultiSigWallet.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<MultiSigWallet> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, Uint64 _threshold, Set<WasmAddress> _owners) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(_threshold,_owners));
        return deployRemoteCall(MultiSigWallet.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<MultiSigWallet> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, Uint64 _threshold, Set<WasmAddress> _owners) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(_threshold,_owners));
        return deployRemoteCall(MultiSigWallet.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public RemoteCall<TransactionReceipt> execute(WasmAddress _to, Uint64 _value, byte[] _data, byte[] _signatures, Uint64 value, Uint64 gas) {
        final WasmFunction function = new WasmFunction(FUNC_EXECUTE, Arrays.asList(_to,_value,_data,_signatures,value,gas), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> execute(WasmAddress _to, Uint64 _value, byte[] _data, byte[] _signatures, Uint64 value, Uint64 gas, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_EXECUTE, Arrays.asList(_to,_value,_data,_signatures,value,gas), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> addOwner(WasmAddress _owner) {
        final WasmFunction function = new WasmFunction(FUNC_ADDOWNER, Arrays.asList(_owner), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addOwner(WasmAddress _owner, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_ADDOWNER, Arrays.asList(_owner), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> removeOwner(WasmAddress _owner) {
        final WasmFunction function = new WasmFunction(FUNC_REMOVEOWNER, Arrays.asList(_owner), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> removeOwner(WasmAddress _owner, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_REMOVEOWNER, Arrays.asList(_owner), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> changeThreshold(Uint64 _newThreshold) {
        final WasmFunction function = new WasmFunction(FUNC_CHANGETHRESHOLD, Arrays.asList(_newThreshold), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> changeThreshold(Uint64 _newThreshold, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_CHANGETHRESHOLD, Arrays.asList(_newThreshold), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Map> getIsOwner() {
        final WasmFunction function = new WasmFunction(FUNC_GETISOWNER, Arrays.asList(), Map.class, 
                new com.platon.rlp.ParameterizedTypeImpl(
                new java.lang.reflect.Type[] {WasmAddress.class, Boolean.class},
                Map.class,
                Map.class));
        return executeRemoteCall(function, Map.class);
    }

    public static MultiSigWallet load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new MultiSigWallet(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static MultiSigWallet load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new MultiSigWallet(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public static class OwnerAddedEventResponse {
        public Log log;

        public String topic;

        public WasmAddress arg1;
    }

    public static class OwnerRemovedEventResponse {
        public Log log;

        public String topic;

        public Uint64 arg1;
    }

    public static class ThresholdChangedEventResponse {
        public Log log;

        public String topic;

        public Uint64 arg1;
    }

    public static class ExecutedEventResponse {
        public Log log;

        public String topic;

        public WasmAddress arg1;

        public Uint64 arg2;

        public String arg3;
    }

    public static class ReceivedEventResponse {
        public Log log;

        public String topic;

        public Uint64 arg1;

        public WasmAddress arg2;
    }
}

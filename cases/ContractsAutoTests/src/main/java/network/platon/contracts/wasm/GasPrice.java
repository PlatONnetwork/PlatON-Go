package network.platon.contracts.wasm;

import com.platon.rlp.datatypes.Int64;
import com.platon.rlp.datatypes.Uint32;
import com.platon.rlp.datatypes.Uint64;
import com.platon.rlp.datatypes.Uint8;
import com.platon.rlp.datatypes.WasmAddress;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.web3j.abi.WasmEventEncoder;
import org.web3j.abi.WasmFunctionEncoder;
import org.web3j.abi.datatypes.WasmEvent;
import org.web3j.abi.datatypes.WasmEventParameter;
import org.web3j.abi.datatypes.WasmFunction;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.PlatonFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.WasmContract;
import org.web3j.tx.gas.GasProvider;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the org.web3j.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.13.1.5.
 */
public class GasPrice extends WasmContract {
    private static String BINARY_0 = "0x0061736d010000000181011560027f7f0060017f0060017f017f60037f7f7f0060027f7f017f60037f7f7f017f6000006000017e60047f7f7f7f0060047f7f7f7f017f60027f7e0060037f7e7e0060077f7f7f7f7f7f7f017f6000017f60087f7f7f7f7f7f7f7f017f60017f017e60017e0060027e7f0060037e7e7f0060057f7f7f7f7f017f60027e7e017f02f2072c03656e760c706c61746f6e5f6465627567000003656e760c706c61746f6e5f70616e6963000603656e760d706c61746f6e5f63616c6c6572000103656e760e706c61746f6e5f61646472657373000103656e760f706c61746f6e5f7472616e73666572000503656e7610706c61746f6e5f6761735f7072696365000203656e7610706c61746f6e5f74696d657374616d70000703656e7611706c61746f6e5f626c6f636b5f68617368001103656e760f706c61746f6e5f636f696e62617365000103656e760e706c61746f6e5f62616c616e6365000403656e7611706c61746f6e5f63616c6c5f76616c7565000203656e760b706c61746f6e5f73686133000803656e7610706c61746f6e5f65637265636f766572000903656e7610706c61746f6e5f726970656d64313630000303656e760d706c61746f6e5f736861323536000303656e760e706c61746f6e5f64657374726f79000203656e761b706c61746f6e5f636f6e74726163745f636f64655f6c656e677468000203656e7614706c61746f6e5f636f6e74726163745f636f6465000503656e760d726c705f6c6973745f73697a65000203656e760f706c61746f6e5f726c705f6c697374000303656e760e726c705f62797465735f73697a65000403656e7610706c61746f6e5f726c705f6279746573000303656e760d726c705f753132385f73697a65001403656e760f706c61746f6e5f726c705f75313238001203656e760a706c61746f6e5f676173000703656e7613706c61746f6e5f626c6f636b5f6e756d626572000703656e7610706c61746f6e5f6761735f6c696d6974000703656e7613706c61746f6e5f63616c6c65725f6e6f6e6365000703656e7610706c61746f6e5f7365745f7374617465000803656e7617706c61746f6e5f6765745f73746174655f6c656e677468000403656e7610706c61746f6e5f6765745f7374617465000903656e7617706c61746f6e5f6765745f696e7075745f6c656e677468000d03656e7610706c61746f6e5f6765745f696e707574000103656e761d706c61746f6e5f6765745f63616c6c5f6f75747075745f6c656e677468000d03656e7616706c61746f6e5f6765745f63616c6c5f6f7574707574000103656e760d706c61746f6e5f72657475726e000003656e760d706c61746f6e5f726576657274000603656e760b706c61746f6e5f63616c6c000c03656e7614706c61746f6e5f64656c65676174655f63616c6c001303656e760e706c61746f6e5f6d696772617465000c03656e7614706c61746f6e5f636c6f6e655f6d696772617465000e03656e760c706c61746f6e5f6576656e74000803656e760d706c61746f6e5f6465706c6f79000c03656e760c706c61746f6e5f636c6f6e65000e037d7c060a0401040005000002000a010a010101100101010101000101010001000300000201010101010001010003000103000004040000030000000b0b00000000000000000003000302050000010205000000020005090105030609030f0f0002010200000000000204000000020200060202000100010006020208040004050170012c2c05030100020608017f0141d093040b073b04066d656d6f72790200115f5f7761736d5f63616c6c5f63746f7273002c0f5f5f66756e63735f6f6e5f65786974009a0106696e766f6b650084010931010041010b2b3a3b3e3f40414243424445464748494a4b4e4f515253545556575a5b5c6061636465666768696a6b6c6d6e0ad48b017c050010a2010bb90301077f230041a0016b22022400200241ee0d102e2104200241e8006a102f200241fc006a410036020020024200370274200241e8006a410210302103200241d8006a20041031200241c8006a20001031200241406b4100360200200241386a4200370300200241306a420037030020024200370328200241286a20022802582200200228025c103220022802482204200228024c103221062003200228022810332003200241d8006a10342003200241c8006a10342002280274200241f8006a28020047044010010b2003280204210520032802002107200241106a1035210320024198016a410036020020024190016a420037030020024188016a4200370300200242003703800120024180016a4100103620024180016a2001103720024180016a41011036200228028001210820024180016a4104721038200320081033200341011030220320011039200328020c200341106a28020047044010010b20072005200328020020032802041029200328020c22050440200320053602100b200641046a1038200404402002200436024c0b200004402002200036025c0b200228027422030440200220033602780b200241a0016a24000b910101027f20004200370200200041086a410036020020012102024003402002410371044020022d0000450d02200241016a21020c010b0b2002417c6a21020340200241046a22022802002203417f73200341fffdfb776a7141808182847871450d000b0340200341ff0171450d01200241016a2d00002103200241016a21020c000b000b20002001200220016b107020000b160020004100360208200042003702002000410010750bf30101057f20002802042105200041106a2802002202200041146a280200220349044020022001ad2005ad422086843702002000200028021041086a36021020000f0b027f41002002200028020c22046b410375220641016a2202200320046b2203410275220420042002491b41ffffffff01200341037541ffffffff00491b2204450d001a200441037410780b2102200220064103746a22032001ad2005ad4220868437020020032000280210200028020c22066b22016b2105200220044103746a2102200341086a2103200141014e044020052006200110791a0b20002002360214200020033602102000200536020c20000ba40201047f230041206b2202240020024100360218200242003703100240027f4100200128020420012d00002204410176200441017122051b2204450d001a2001280208200141016a20051b2103200241106a200410710340200404402002280214220120032d00003a00002002200141016a3602142004417f6a2104200341016a21030c010b0b2002280210210320022802140b220420036b41204d044020002004360204200020033602002000200228021836020820024100360218200242003703100c010b200241003602082002420037030020024120106f2003200228021420036b200228020022042002280204220120046b100b2000200136020420002004360200200020022802083602082003450d00200220033602140b200241206a24000b8b0101017f024020012002460440410121030c010b4101210302400240200220016b2202410146044020012c0000417f4c0d010c030b200241374b0d010b200241016a21030c010b2002107320026a41016a21030b027f200041186a28020022010440200041086a280200200041146a280200200110740c010b20000b2201200128020020036a36020020000b1300200028020820014904402000200110750b0b3501027f200020012802002202200128020420026b22011014200028020422036a107620022001200320002802006a1015200010770b19002000102f200041146a41003602002000420037020c20000bcd0c02077f027e230041306b22042400200041046a2107024020014101460440200041086a280200200041146a280200200041186a220228020022031074280200210120022003417f6a3602002007107d4180104f044020072000410c6a280200417c6a107b0b200141384f047f2001107320016a0520010b41016a2101200041186a2802002202450d01200041086a280200200041146a2802002002107421000c010b02402007107d0d00200041146a28020022014180084f0440200020014180786a360214200041086a2201280200220228020021032001200241046a360200200420033602182007200441186a107e0c010b2000410c6a2802002202200041086a2802006b4102752203200041106a2205280200220620002802046b220141027549044041802010782105200220064704400240200028020c220120002802102202470d0020002802082203200028020422064b04402000200320012003200320066b41027541016a417e6d41027422026a107f220136020c2000200028020820026a3602080c010b200441186a200220066b2201410175410120011b22012001410276200041106a1080012102200028020c210320002802082101034020012003470440200228020820012802003602002002200228020841046a360208200141046a21010c010b0b200029020421092000200229020037020420022009370200200029020c21092000200229020837020c200220093702082002108101200028020c21010b200120053602002000200028020c41046a36020c0c020b02402000280208220120002802042202470d00200028020c2203200028021022064904402000200120032003200620036b41027541016a41026d41027422026a10820122013602082000200028020c20026a36020c0c010b200441186a200620026b2201410175410120011b2201200141036a410276200041106a1080012102200028020c210320002802082101034020012003470440200228020820012802003602002002200228020841046a360208200141046a21010c010b0b200029020421092000200229020037020420022009370200200029020c21092000200229020837020c200220093702082002108101200028020821010b2001417c6a2005360200200020002802082201417c6a22023602082002280200210220002001360208200420023602182007200441186a107e0c010b20042001410175410120011b20032005108001210241802010782106024020022802082201200228020c2203470d0020022802042205200228020022084b04402002200520012005200520086b41027541016a417e6d41027422036a107f22013602082002200228020420036a3602040c010b200441186a200320086b2201410175410120011b22012001410276200241106a28020010800121032002280208210520022802042101034020012005470440200328020820012802003602002003200328020841046a360208200141046a21010c010b0b2002290200210920022003290200370200200320093702002002290208210920022003290208370208200320093702082003108101200228020821010b200120063602002002200228020841046a360208200028020c2105034020002802082005460440200028020421012000200228020036020420022001360200200228020421012002200536020420002001360208200029020c21092000200229020837020c200220093702082002108101052005417c6a210502402002280204220120022802002203470d0020022802082206200228020c22084904402002200120062006200820066b41027541016a41026d41027422036a10820122013602042002200228020820036a3602080c010b200441186a200820036b2201410175410120011b2201200141036a410276200228021010800121062002280208210320022802042101034020012003470440200428022020012802003602002004200428022041046a360220200141046a21010c010b0b20022902002109200220042903183702002002290208210a20022004290320370208200420093703182004200a3703202006108101200228020421010b2001417c6a200528020036020020022002280204417c6a3602040c010b0b0b200441186a2007107a200428021c4100360200200041186a2100410121010b2000200028020020016a360200200441306a24000b880102027f017e4101210220014280015a044041002102034020012004845045044020044238862001420888842101200241016a2102200442088821040c010b0b200241384f047f2002107320026a0520020b41016a21020b200041186a28020022030440200041086a280200200041146a2802002003107421000b2000200028020020026a3602000bea0101047f230041106b22042400200028020422012000280210220241087641fcffff07716a2103027f410020012000280208460d001a2003280200200241ff07714102746a0b2101200441086a2000107a200428020c210203400240200120024604402000410036021420002802082103200028020421010340200320016b41027522024103490d022000200141046a22013602040c000b000b200141046a220120032802006b418020470d0120032802042101200341046a21030c010b0b2002417f6a220241014d04402000418004418008200241016b1b3602100b20002001107b200441106a24000b2801017f2000420020011016200028020422026a107642002001200220002802006a1017200010770b0300010b3b00230041206b220024002000420037031820004200370310200041dd0d36020020001018370308200041106a10051a2000103c200041206a24000b3102017f027e230041106b22012400200029030821021018210320012000280200102e200220037d102d200141106a24000b5201017f230041306b22012400200141286a4200370300200141206a42003703002001420037031820014200370310200141cb0d360200200110183703082000200141106a10072001103c200141306a24000b2800230041106b22002400200041b70d3602002000101837030810191a2000103c200041106a24000b2800230041106b22002400200041a60d36020020001018370308101a1a2000103c200041106a24000b2800230041106b220024002000419b0d3602002000101837030810181a2000103c200041106a24000b2800230041106b220024002000418a0d3602002000101837030810061a2000103c200041106a24000b4400230041306b22002400200041206a41003602002000420037031820004200370310200041eb0c36020020001018370308200041106a10082000103c200041306a24000b3d00230041206b220024002000420037031820004200370310200041fb0c360200200010183703082001200041106a10091a2000103c200041206a24000b4400230041306b22002400200041206a41003602002000420037031820004200370310200041dd0c36020020001018370308200041106a10022000103c200041306a24000b4500230041306b22002400200041206a41003602002000420037031820004200370310200041cb0c36020020001018370308200041106a100a1a2000103c200041306a24000b4400230041306b22002400200041206a41003602002000420037031820004200370310200041bc0c36020020001018370308200041106a10032000103c200041306a24000b6101017f230041306b22002400200041286a4200370300200041206a42003703002000420037031820004200370310200041b00c3602002000101837030820012802002202200128020420026b200041106a4120100b2000103c200041306a24000b2800230041106b220024002000419c0c36020020001018370308101b1a2000103c200041106a24000b3c00230041206b22002400200041e4003a001f2000418c0c3602082000101837031020012000411f6a410110041a200041086a103c200041206a24000b4701017f230041106b22002400200041fb0b3602002000101837030820012802002203200128020420036b20022802002201200228020420016b101c2000103c200041106a24000b3901017f230041106b22002400200041e30b3602002000101837030820012802002202200128020420026b101d1a2000103c200041106a24000b4301037f230041106b220224002001104d2103200241d20b3602002002101837030820002802002204200028020420046b20032001101e1a2002103c200241106a24000b9b0101047f230041106b220124002001200036020c2000047f41cc13200041086a2202411076220041cc132802006a220336020041c81341c813280200220420026a41076a417871220236020002400240200341107420024d044041cc13200341016a360200200041016a21000c010b2000450d010b200040000d0010010b20042001410c6a4104107941086a0541000b2100200141106a240020000b2800230041106b22002400200041ba0b36020020001018370308101f1a2000103c200041106a24000b350023004180016b22002400200041106a1050200041a90b36020020001018370308200041106a10202000103c20004180016a24000bc70201027f200041003a0000200041e4006a2202417f6a41003a0000200041003a0002200041003a00012002417d6a41003a00002002417e6a41003a0000200041003a00032002417c6a41003a00002000410020006b41037122016a22024100360200200241e40020016b417c7122016a2200417c6a4100360200024020014109490d002002410036020820024100360204200041786a4100360200200041746a410036020020014119490d002002410036021820024100360214200241003602102002410036020c200041706a41003602002000416c6a4100360200200041686a4100360200200041646a41003602002001200241047141187222016b2100200120026a2101034020004120490d0120014200370300200141186a4200370300200141106a4200370300200141086a4200370300200141206a2101200041606a21000c000b000b0b2800230041106b220024002000418b0b3602002000101837030810211a2000103c200041106a24000b350023004180016b22002400200041106a1050200041f40a36020020001018370308200041106a10222000103c20004180016a24000b3301017f230041106b220024002001104d2102200041e60a360200200010183703082002200110232000103c200041106a24000b2700230041106b22002400200041d80a3602002000101837030810242000103c200041106a24000b2700230041106b22002400200041cb0a3602002000101837030810012000103c200041106a24000b3301017f230041106b220024002001104d2102200041be0a360200200010183703082002200110002000103c200041106a24000b940101017f230041406a22002400200041306a20021058200041206a1059200041106a1059200041b20a36020020001018370308200120002802302202200028023420026b20002802202201200028022420016b20002802102203200028021420036b10251a2000103c20030440200020033602140b20010440200020013602240b20020440200020023602340b200041406b24000bde0202047f017e230041406a22032400200128020420012d00002202410176200241017122041b21022001280208200141016a20041b210142a5c688a1c89ca7f94b21060340200204402002417f6a21022001300000200642b383808080207e852106200141016a21010c010b0b200341286a1035410110302102200341206a4100360200200341186a4200370300200341106a420037030020034200370308200341086a20061037200220032802081033200220061039027f02400240200228020c200241106a280200460440200241046a2104200228020021010c010b200241046a2104100120022802002101200228020c2002280210470d010b20010c010b100120022802000b21052000410036020820004200370200200520042802006a220420016b2205044020002005107120012004200041046a10720b200341086a4104721038200228020c22010440200220013602100b200341406b24000b1600200041003602082000420037020020004100106f0b7000230041306b22002400200041206a20021058200041106a10592000419d0a36020020001018370308200120002802202202200028022420026b20002802102201200028021420016b10261a2000103c20010440200020013602140b20020440200020023602240b200041306a24000b2a00230041106b220024002000418e0a360200200010183703082001100f1a2000103c200041106a24000b840401077f230041b0016b22002400200041920836024020001018370348200110102102200041406b103c02402002450d00200041a0016a2002105d2103200041ae083602402000101837034820012003280200200210112102200041406b103c024020024101480d0020004190016a105920004180016a105920004180c2cdeb06360040200041f0006a200041406b105e2101200041e0006a200041406b418008102e1058200041d8006a4100360200200041d0006a4200370300200041c8006a420037030020004200370340200041406b20032802002003280204103220002802602207200028026410322108200041286a103522022001105f2002200028024041046a10332002410210302202200310342002200041e0006a1034200228020c200241106a28020047044010010b2002280204210520022802002104200041206a4100360200200041186a420037030020004200370310200041ff0936020020001018370308200041106a20042005200028029001220420002802940120046b200028028001220620002802840120066b10271a2000103c200228020c22050440200220053602100b200841046a103820070440200020073602640b200128020022020440200120023602040b2006044020002006360284010b2004450d0020002004360294010b20032802002202450d00200320023602040b200041b0016a24000b230020004100360208200042003702002001044020002001107120002001107c0b20000b260020004100360208200042003702002000410410712001200141046a200041046a107220000b6101037f200028020c200041106a28020047044010010b200028020422022001280204200128020022036b22016a220420002802084b047f20002004107520002802040520020b20002802006a2003200110791a2000200028020420016a3602040bc20101027f230041e0006b22002400200041d0006a1059200041406b1059200041306a200041186a418008102e1058200041286a4100360200200041206a420037030020004200370318200041ea09360208200010183703102001200041186a20002802302201200028023420016b20002802502202200028025420026b20002802402203200028024420036b10281a200041086a103c20010440200020013602340b20030440200020033602440b20020440200020023602540b200041e0006a24000b4701017f230041106b22002400200041dd093602002000101837030820012802002203200128020420036b20022802002201200228020420016b10292000103c200041106a24000b5c01017f230041306b22022400200241206a41003602002002420037031820024200370310200241cc0936020020021018370308200020012802002200200128020420006b41ff0171200241106a100c1a2002103c200241306a24000b5501017f230041306b22002400200041206a41003602002000420037031820004200370310200041bb093602002000101837030820012802002202200128020420026b200041106a100d2000103c200041306a24000b5f01017f230041306b22002400200041286a4200370300200041206a42003703002000420037031820004200370310200041ad093602002000101837030820012802002202200128020420026b200041106a100e2000103c200041306a24000b2c00230041106b220024002000419f09360200200010183703082001200210161a2000103c200041106a24000b3501017f230041106b22002400410a104d21032000418f093602002000101837030820012002200310172000103c200041106a24000b3901017f230041106b2200240020004180093602002000101837030820012802002202200128020420026b10141a2000103c200041106a24000b4001027f230041106b22002400410a104d2102200041ef083602002000101837030820012802002203200128020420036b200210152000103c200041106a24000b2a00230041106b22002400200041e10836020020001018370308200110121a2000103c200041106a24000b4001027f230041106b22002400410a104d2102200041d1083602002000101837030820012802002203200128020420036b200210132000103c200041106a24000b2a00230041106b22002400200041920836020020001018370308200110101a2000103c200041106a24000b3b0023004180016b22002400200041106a1050200041ae08360200200010183703082001200041106a41e40010111a2000103c20004180016a24000b840401077f230041b0016b22002400200041920836024020001018370348200110102102200041406b103c02402002450d00200041a0016a2002105d2103200041ae083602402000101837034820012003280200200210112102200041406b103c024020024101480d0020004190016a105920004180016a105920004180c2cdeb06360040200041f0006a200041406b105e2101200041e0006a200041406b418008102e1058200041d8006a4100360200200041d0006a4200370300200041c8006a420037030020004200370340200041406b20032802002003280204103220002802602207200028026410322108200041286a103522022001105f2002200028024041046a10332002410210302202200310342002200041e0006a1034200228020c200241106a28020047044010010b2002280204210520022802002104200041206a4100360200200041186a420037030020004200370310200041c30836020020001018370308200041106a20042005200028029001220420002802940120046b200028028001220620002802840120066b102a1a2000103c200228020c22050440200220053602100b200841046a103820070440200020073602640b200128020022020440200120023602040b2006044020002006360284010b2004450d0020002004360294010b20032802002202450d00200320023602040b200041b0016a24000bc20101027f230041e0006b22002400200041d0006a1059200041406b1059200041306a200041186a418008102e1058200041286a4100360200200041206a4200370300200042003703182000418508360208200010183703102001200041186a20002802302201200028023420016b20002802502202200028025420026b20002802402203200028024420036b102b1a200041086a103c20010440200020013602340b20030440200020033602440b20020440200020023602540b200041e0006a24000bdd0101057f20002802042203200028020022026b220420014904402000280208220520036b200120046b22034f044020002003107c0f0b2001200520026b2202410174220520052001491b41ffffffff07200241ffffffff03491b220204402002107821060b200420066a220521010340200141003a0000200141016a21012003417f6a22030d000b200220066a210220052000280204200028020022066b22046b2103200441014e044020032006200410791a0b2000200236020820002001360204200020033602000f0b200420014b04402000200120026a3602040b0b6101027f027f02402002410b4f0440200241106a4170712204107821032000200236020420002004410172360200200020033602080c010b200020024101743a0000200041016a22032002450d011a0b20032001200210790b20026a41003a00000b2001017f2000200110782202360200200020023602042000200120026a3602080b2800200120006b220141014e044020022802002000200110791a2002200228020020016a3602000b0b1e01017f03402000044020004108762100200141016a21010c010b0b20010b25002000200120026a417f6a220241087641fcffff07716a280200200241ff07714102746a0b2f01017f200028020820014904402001104d200028020020002802041079210220002001360208200020023602000b0b3601017f200028020820014904402001104d200028020020002802041079210220002001360208200020023602000b200020013602040b7a01037f0340024020002802102201200028020c460d00200141786a2802004504401001200028021021010b200141786a22022002280200417f6a220336020020030d002000200236021020002001417c6a2802002201200028020420016b220210126a1076200120002802006a22012002200110130c010b0b0b0b002000410120001b104d0bfc0801067f03400240200020046a2105200120046a210320022004460d002003410371450d00200520032d00003a0000200441016a21040c010b0b200220046b210602402005410371220745044003402006411049450440200020046a2203200120046a2205290200370200200341086a200541086a290200370200200441106a2104200641706a21060c010b0b027f2006410871450440200120046a2103200020046a0c010b200020046a2205200120046a2204290200370200200441086a2103200541086a0b21042006410471044020042003280200360200200341046a2103200441046a21040b20064102710440200420032f00003b0000200341026a2103200441026a21040b2006410171450d01200420032d00003a000020000f0b024020064120490d002007417f6a220741024b0d00024002400240024002400240200741016b0e020102000b2005200120046a220328020022073a0000200541016a200341016a2f00003b0000200041036a2108200220046b417d6a2106034020064111490d03200420086a2203200120046a220541046a2802002202410874200741187672360200200341046a200541086a2802002207410874200241187672360200200341086a2005410c6a28020022024108742007411876723602002003410c6a200541106a2802002207410874200241187672360200200441106a2104200641706a21060c000b000b2005200120046a220328020022073a0000200541016a200341016a2d00003a0000200041026a2108200220046b417e6a2106034020064112490d03200420086a2203200120046a220541046a2802002202411074200741107672360200200341046a200541086a2802002207411074200241107672360200200341086a2005410c6a28020022024110742007411076723602002003410c6a200541106a2802002207411074200241107672360200200441106a2104200641706a21060c000b000b2005200120046a28020022073a0000200041016a21082004417f7320026a2106034020064113490d03200420086a2203200120046a220541046a2802002202411874200741087672360200200341046a200541086a2802002207411874200241087672360200200341086a2005410c6a28020022024118742007410876723602002003410c6a200541106a2802002207411874200241087672360200200441106a2104200641706a21060c000b000b200120046a41036a2103200020046a41036a21050c020b200120046a41026a2103200020046a41026a21050c010b200120046a41016a2103200020046a41016a21050b20064110710440200520032d00003a00002005200328000136000120052003290005370005200520032f000d3b000d200520032d000f3a000f200541106a2105200341106a21030b2006410871044020052003290000370000200541086a2105200341086a21030b2006410471044020052003280000360000200541046a2105200341046a21030b20064102710440200520032f00003b0000200541026a2105200341026a21030b2006410171450d00200520032d00003a00000b20000b4f01037f20012802042203200128021020012802146a220441087641fcffff07716a21022000027f410020032001280208460d001a2002280200200441ff07714102746a0b360204200020023602000b2501017f200028020821020340200120024645044020002002417c6a22023602080c010b0b0b2d01017f200028020421020340200241003a00002000200028020441016a22023602042001417f6a22010d000b0b2801017f200028020820002802046b2201410874417f6a410020011b200028021420002802106a6b0ba30202057f017e230041206b22052400024020002802082202200028020c2203470d0020002802042204200028020022064b04402000200420022004200420066b41027541016a417e6d41027422036a107f22023602082000200028020420036a3602040c010b200541086a200320066b2202410175410120021b220220024102762000410c6a1080012103200028020821042000280204210203402002200446450440200328020820022802003602002003200328020841046a360208200241046a21020c010b0b2000290200210720002003290200370200200320073702002000290208210720002003290208370208200320073702082003108101200028020821020b200220012802003602002000200028020841046a360208200541206a24000b2601017f200120006b22014102752103200104402002200020011083010b200220034102746a0b4f01017f2000410036020c200041106a2003360200200104402001410274107821040b200020043602002000200420024102746a22023602082000200420014102746a36020c2000200236020420000b2b01027f200028020821012000280204210203402001200247044020002001417c6a22013602080c010b0b0b1c00200120006b22010440200220016b2202200020011083010b20020b8d0301037f024020002001460d00200120006b20026b410020024101746b4d044020002001200210791a0c010b20002001734103712103027f024020002001490440200020030d021a410021030340200120036a2105200020036a2204410371450440200220036b210241002103034020024104490d04200320046a200320056a280200360200200341046a21032002417c6a21020c000b000b20022003460d04200420052d00003a0000200341016a21030c000b000b024020030d002001417f6a21040340200020026a22034103714504402001417c6a21032000417c6a2104034020024104490d03200220046a200220036a2802003602002002417c6a21020c000b000b2002450d042003417f6a200220046a2d00003a00002002417f6a21020c000b000b2001417f6a210103402002450d03200020026a417f6a200120026a2d00003a00002002417f6a21020c000b000b200320056a2101200320046a0b210303402002450d01200320012d00003a00002002417f6a2102200341016a2103200141016a21010c000b000b0bb60d02067f027e230041a0016b2201240010a201101f2200104d22021020200141206a200120022000411c1085012200410010860102400240200141206a1087012206500d004180081088012006510440200041011089010c020b41f60d1088012006510440200041021089010c020b41850e10880120065104402000108a01410247044010010b200141206a20004101108601200141206a108b0102400240200141206a108c01450d002001280224450d0020012802202d000041c001490d010b10010b20014180016a200141206a108d01200128028401220041114f044010010b420021062001280280012102034020000440200742088620064238888421072000417f6a210020023100002006420886842106200241016a21020c010b0b420020064201837d2007423f8620064201888485103d0c020b41950e1088012006510440200041031089010c020b41a70e1088012006510440200041041089010c020b41b60e1088012006510440200041051089010c020b41c00e1088012006510440200041061089010c020b41d00e1088012006510440200041071089010c020b41df0e108801200651044020004108108e010c020b41ed0e1088012006510440200041091089010c020b41fa0e10880120065104402000410a1089010c020b41870f10880120065104402000410b1089010c020b41970f10880120065104402000410c1089010c020b41a50f10880120065104402000410d108f010c020b41b00f10880120065104402000410e1089010c020b41c20f10880120065104402000410f108e010c020b41d10f1088012006510440200041101090010c020b41e00f108801200651044020004111108f010c020b41f50f1088012006510440200142003703880120014200370380012000108a01410347044010010b200141206a20004101108601200141206a20014180016a109101200141206a200041021086012001200141206a109201220236028c01200141206a20014180016a10930122002002104c200028020022020440200020023602040b2001280280012200450d0220012000360284010c020b4184101088012006510440200041121089010c020b4199101088012006510440200041131089010c020b41a8101088012006510440200041141089010c020b41c2101088012006510440200041151089010c020b41d6101088012006510440200041161094010c020b41e3101088012006510440200041171089010c020b41f0101088012006510440200041181089010c020b41fc101088012006510440200041191094010c020b41881110880120065104402000411a1095010c020b41931110880120065104402000411b1095010c020b41a61110880120065104402000411c1096010c020b41b41110880120065104402000411d1096010c020b41c21110880120065104402000411e1096010c020b41d51110880120065104402000411f1090010c020b41e1111088012006510440200141386a4200370300200141306a4200370300200141286a42003703002001420037032020014100360248200142003703402000108a01410347044010010b200141e0006a20004101108601200141e0006a109701412047044010010b200141406b21034100210203402002412047044020014180016a200141e0006a2002108601200141206a20026a20014180016a1098013a0000200241016a21020c010b0b20014180016a2000410210860120014180016a2003109101200141e8006a2202200141286a290300370300200141f0006a2204200141306a290300370300200141f8006a2205200141386a29030037030020012001290320370360200141d0006a2003109301210020014198016a200529030037030020014190016a200429030037030020014188016a2002290300370300200120012903603703800120014180016a20001062200028020022020440200020023602040b20012802402200450d02200120003602440c020b41f111108801200651044020004120108f010c020b418112108801200651044020004121108f010c020b418e121088012006510440200041221099010c020b41a0121088012006510440200041231099010c020b41ae12108801200651044020004124108f010c020b41c112108801200651044020004125108f010c020b41d0121088012006510440200041261094010c020b41e212108801200651044020004127108f010c020b41f012108801200651044020004128108e010c020b418913108801200651044020004129108e010c020b419c1310880120065104402000412a1096010c020b41a9131088012006520d002000412b1096010c010b10010b109a01200141a0016a24000b750020004200370210200042ffffffff0f370208200020023602042000200136020002402003410871450d00200010a30120024f0d002003410471044010010c010b200042003702000b02402003411071450d00200010a30120024d0d0020034104710440100120000f0b200042003702000b20000bd00202067f017e230041106b220324002001280208220520024b0440200341086a200110a70120012003280208200328020c10a60136020c2003200110a701410021052001027f410020032802002207450d001a410020032802042208200128020c2206490d001a200820062006417f461b210420070b360210200141146a2004360200200141003602080b200141106a210603402001280214210402402005200249044020040d01410021040b20002006280200200441141085011a200341106a24000f0b2003200110a70141002104027f410020032802002205450d001a410020032802042208200128020c2207490d001a200820076b2104200520076a0b210520012004360214200120053602102003200641002005200410a60110a5012001200329030022093702102001200128020c2009422088a76a36020c2001200128020841016a22053602080c000b000b880102027f017e230041106b220124002000108b01024002402000108c01450d002000280204450d0020002802002d000041c001490d010b10010b200141086a2000108d01200128020c220041094f044010010b200128020821020340200004402000417f6a210020023100002003420886842103200241016a21020c010b0b200141106a240020030b3901027e42a5c688a1c89ca7f94b210103402000300000220250450440200041016a2100200142b383808080207e20028521010c010b0b20010b2b01017f230041106b220224002000108a01410147044010010b200241086a2001110100200241106a24000b2601017f02402000280204450d0020002802002d000041c001490d002000109b0121010b20010b4101017f200028020445044010010b0240200028020022012d0000418101470d00200028020441014d047f100120002802000520010b2c00014100480d0010010b0b990101037f200028020445044041000f0b2000108b01200028020022022c0000220141004e044020014100470f0b027f4101200141807f460d001a200141ff0171220341b7014d0440200028020441014d047f100120002802000520020b2d00014100470f0b4100200341bf014b0d001a2000280204200141ff017141ca7e6a22014d047f100120002802000520020b20016a2d00004100470b0bd60101047f2001109c012204200128020422024b04401001200128020421020b200128020021052000027f02400240200204404100210120052c00002203417f4a0d01027f200341ff0171220141bf014d04404100200341ff017141b801490d011a200141c97e6a0c010b4100200341ff017141f801490d001a200141897e6a0b41016a21010c010b4101210120050d000c010b41002103200120046a20024b0d0020022001490d00410020022004490d011a200120056a2103200220016b20042004417f461b0c010b41000b360204200020033602000bee0102017f027e230041d0006b22022400200241186a4100360200200241106a4200370300200242003703082000108a01410247044010010b200241206a20004101108601200241206a109701411447044010010b41002100034020004114470440200241386a200241206a2000108601200241086a20006a200241386a1098013a0000200041016a21000c010b0b200241306a200241186a2802002200360200200241286a200241106a2903002203370300200220022903082204370320200241c8006a2000360200200241406b2003370300200220043703382002200241386a2001110000200241d0006a24000b800101017f230041306b2202240020024100360210200242003703082000108a01410247044010010b200241186a20004101108601200241186a200241086a1091012002200241186a200241086a10930122002001110000200028020022010440200020013602040b2002280208220004402002200036020c0b200241306a24000bd30101027f230041406a22022400200241186a420037030020024200370310200242003703082000108a01410347044010010b20024101360220200220003602302002200241206a360234200241306a200241086a109d01200241306a200241146a2203109d012002200241306a200241086a1093012200200241206a200310930122032001110300200328020022010440200320013602040b200028020022030440200020033602040b200228021422000440200220003602180b2002280208220004402002200036020c0b200241406b24000bc10101037f230041206b22022400024002402000280204044020002802002d000041c001490d010b20024100360208200242003703000c010b200241186a2000108d0120022802182104200241106a2000108d01200228021021032000109c0121002002410036020820024200370300200020036a220020046b2203450d0020022003107120042000200241047210720b2001280200044020014100360208200142003702000b2001200228020036020020012002290204370204200241206a24000b860101037f230041106b220124002000108b01024002402000108c01450d002000280204450d0020002802002d000041c001490d010b10010b200141086a2000108d01200128020c220041054f044010010b200128020821030340200004402000417f6a210020032d00002002410874722102200341016a21030c010b0b200141106a240020020b3b01017f2000420037020020004100360208200128020420012802006b2202044020002002107120012802002001280204200041046a10720b20000b3f01017f230041206b220224002000108a01410247044010010b200241086a20004101108601200241086a200241086a1092012001110000200241206a24000b940501067f230041f0006b22022400200241206a4100360200200241186a420037030020024200370310200241246a2206109e012000108a01410347044010010b200241306a20004101108601200241306a200241106a109f01200241306a20004102108601024002402002280234044020022802302d000041c001490d010b200241d8006a109e010c010b200241c8006a200241306a108d01200241306a109c0121030240024002400240200228024822000440200228024c220420034f0d010b41002100200241e0006a410036020020024200370358410021040c010b200241e0006a4100360200200242003703582000200420032003417f461b22056a21042005410a4b0d010b200220054101743a0058200241d8006a41017221030c010b200541106a4170712207107821032002200536025c20022007410172360258200220033602600b034020002004470440200320002d00003a0000200341016a2103200041016a21000c010b0b200341003a00000b024020022d0024410171450440200241003b01240c010b200228022c41003a00002002410036022820022d0024410171450d00200241003602240b20062002290358370200200641086a2203200241e0006a2200280200360200200241d8006a10a0012000200241186a290300370300200241e8006a200241206a280200360200200241d0006a220041003602002002200229031037035820024200370348024020022d002441017145044020002003280200360200200220062902003703480c010b200241c8006a200228022c200228022810700b200241406b200241e8006a280200360200200241386a200241e0006a29030037030020022002290358370330200241086a200241306a200241c8006a2001110300200241f0006a24000baf0102037f027e230041d0006b22022400200241186a22034100360200200241106a22044200370300200242003703082000108a01410247044010010b200241206a20004101108601200241206a200241086a109f01200241c8006a20032802002200360200200241406b20042903002205370300200220022903082206370338200241306a2000360200200241286a2005370300200220063703202002200241206a2001110000200241d0006a24000b220002402000280204044020002802002d000041bf014b0d010b10010b2000109b010b800101037f230041106b220124002000108b01024002402000108c01450d002000280204450d0020002802002d000041c001490d010b10010b200141086a2000108d01200128020c220041024f044010010b200128020821020340200004402000417f6a210020022d00002103200241016a21020c010b0b200141106a240020030b7201017f230041206b2202240020024200370308200242003703002000108a01410347044010010b2002410136021c2002200036021020022002411c6a360214200241106a200210a101200241106a200241086a10a101200241106a200229030020022903082001110b00200241206a24000b880101037f41b813410136020041bc132802002100034020000440034041c01341c0132802002201417f6a2202360200200141014845044041b8134100360200200020024102746a22004184016a280200200041046a28020011010041b813410136020041bc1328020021000c010b0b41c013412036020041bc13200028020022003602000c010b0b0b820101047f230041106b2201240002402000280204450d0020002802002d000041c001490d00200141086a200010a701200128020c210003402000450d0120014100200128020822032003200010a60122046a20034520002004497222031b3602084100200020046b20031b2100200241016a21020c000b000b200141106a240020020b800301037f200028020445044041000f0b2000108b0141012102024020002802002c00002201417f4a0d00200141ff0171220341b7014d0440200341807f6a0f0b02400240200141ff0171220141bf014d0440024020002802042201200341c97e6a22024d047f100120002802040520010b4102490d0020002802002d00010d0010010b200241054f044010010b20002802002d000145044010010b4100210241b7012101034020012003460440200241384f0d030c0405200028020020016a41ca7e6a2d00002002410874722102200141016a21010c010b000b000b200141f7014d0440200341c07e6a0f0b024020002802042201200341897e6a22024d047f100120002802040520010b4102490d0020002802002d00010d0010010b200241054f044010010b20002802002d000145044010010b4100210241f701210103402001200346044020024138490d0305200028020020016a418a7e6a2d00002002410874722102200141016a21010c010b0b0b200241ff7d490d010b10010b20020b4501017f230041206b22022400200241086a20002802002000280204280200108601200241086a200110910120002802042200200028020041016a360200200241206a24000b180020004200370200200041086a4100360200200010a0010bd10102037f027e230041406a220224002000108b01200241386a2000108d01200228023c2103024002402000280204450d00200341144b0d0020002802002d000041c001490d010b10010b200241306a22004100360200200241286a220442003703002002420037032020022003411420034114491b22036b41346a2002280238200310791a200241186a20002802002200360200200241106a20042903002205370300200220022903202206370308200141106a2000360000200141086a200537000020012006370000200241406b24000b2201017f03402001410c470440200020016a4100360200200141046a21010c010b0b0b4801017f230041206b22022400200241086a200028020020002802042802001086012001200241086a10870137030020002802042200200028020041016a360200200241206a24000b3501017f230041106b220041d0930436020c41c413200028020c41076a417871220036020041c813200036020041cc133f003602000b3001017f200028020445044041000f0b4101210120002802002c0000417f4c047f200010a4012000109c016a0520010b0b5b00027f027f41002000280204450d001a410020002802002c0000417f4a0d011a20002802002d0000220041bf014d04404100200041b801490d011a200041c97e6a0c010b4100200041f801490d001a200041897e6a0b41016a0b0b5b01027f2000027f0240200128020022054504400c010b200220036a200128020422014b0d0020012002490d00410020012003490d011a200220056a2104200120026b20032003417f461b0c010b41000b360204200020043602000b2901017f230041206b22022400200241086a20002001411410850110a3012100200241206a240020000b2401017f2001109c01220220012802044b044010010b20002001200110a401200210a5010b0bbc0b01004180080bb40b696e697400706c61746f6e5f636c6f6e6500706c61746f6e5f636f6e74726163745f636f64655f6c656e67746800706c61746f6e5f636f6e74726163745f636f646500706c61746f6e5f6465706c6f7900706c61746f6e5f726c705f6c69737400726c705f6c6973745f73697a6500706c61746f6e5f726c705f627974657300726c705f62797465735f73697a6500706c61746f6e5f726c705f7531323800726c705f753132385f73697a6500706c61746f6e5f73686132353600706c61746f6e5f726970656d6431363000706c61746f6e5f65637265636f76657200706c61746f6e5f6576656e7400706c61746f6e5f636c6f6e655f6d69677261746500706c61746f6e5f6d69677261746500706c61746f6e5f64657374726f7900706c61746f6e5f64656c65676174655f63616c6c00706c61746f6e5f63616c6c00706c61746f6e5f646562756700706c61746f6e5f70616e696300706c61746f6e5f72657665727400706c61746f6e5f72657475726e00706c61746f6e5f6765745f63616c6c5f6f757470757400706c61746f6e5f6765745f63616c6c5f6f75747075745f6c656e67746800706c61746f6e5f6765745f696e70757400706c61746f6e5f6765745f696e7075745f6c656e67746800706c61746f6e5f6765745f737461746500706c61746f6e5f6765745f73746174655f6c656e67746800706c61746f6e5f7365745f737461746500706c61746f6e5f7472616e7366657200706c61746f6e5f63616c6c65725f6e6f6e636500706c61746f6e5f7368613300706c61746f6e5f6164647265737300706c61746f6e5f63616c6c5f76616c756500706c61746f6e5f63616c6c657200706c61746f6e5f636f696e6261736500706c61746f6e5f62616c616e636500706c61746f6e5f74696d657374616d7000706c61746f6e5f67617300706c61746f6e5f6761735f6c696d697400706c61746f6e5f626c6f636b5f6e756d62657200706c61746f6e5f626c6f636b5f6861736800706c61746f6e5f6761735f7072696365004761735573656400706c61746f6e476173507269636500706c61746f6e426c6f636b4861736800706c61746f6e426c6f636b4e756d62657200706c61746f6e4761734c696d697400706c61746f6e47617300706c61746f6e54696d657374616d7000706c61746f6e436f696e6261736500706c61746f6e42616c616e636500706c61746f6e4f726967696e00706c61746f6e43616c6c657200706c61746f6e43616c6c56616c756500706c61746f6e4164647265737300706c61746f6e5368613300706c61746f6e43616c6c65724e6f6e636500706c61746f6e5472616e7366657200706c61746f6e536574537461746500706c61746f6e47657453746174654c656e67746800706c61746f6e476574537461746500706c61746f6e476574496e7075744c656e67746800706c61746f6e476574496e70757400706c61746f6e47657443616c6c4f75747075744c656e67746800706c61746f6e47657443616c6c4f757470757400706c61746f6e52657475726e00706c61746f6e52657665727400706c61746f6e50616e696300706c61746f6e446562756700706c61746f6e43616c6c00706c61746f6e44656c656761746543616c6c00706c61746f6e446573746f727900706c61746f6e4d69677261746500706c61746f6e4d696772617465436c6f6e6500706c61746f6e4576656e7400706c61746f6e45637265636f76657200706c61746f6e526970656d6431363000706c61746f6e53686132353600706c61746f6e526c705531323853697a6500706c61746f6e526c705531323800706c61746f6e526c70427974657353697a6500706c61746f6e526c70427974657300706c61746f6e526c704c69737453697a6500706c61746f6e526c704c69737400706c61746f6e436f6e7472616374436f64654c656e67746800706c61746f6e436f6e7472616374436f646500706c61746f6e4465706c6f7900706c61746f6e436c6f6e65";

    public static String BINARY = BINARY_0;

    public static final String FUNC_PLATONSHA3 = "platonSha3";

    public static final String FUNC_PLATONMIGRATE = "platonMigrate";

    public static final String FUNC_PLATONPANIC = "platonPanic";

    public static final String FUNC_PLATONGETSTATELENGTH = "platonGetStateLength";

    public static final String FUNC_PLATONECRECOVER = "platonEcrecover";

    public static final String FUNC_PLATONRIPEMD160 = "platonRipemd160";

    public static final String FUNC_PLATONRLPU128SIZE = "platonRlpU128Size";

    public static final String FUNC_PLATONRLPBYTESSIZE = "platonRlpBytesSize";

    public static final String FUNC_PLATONRLPU128 = "platonRlpU128";

    public static final String FUNC_PLATONGASPRICE = "platonGasPrice";

    public static final String FUNC_PLATONBLOCKHASH = "platonBlockHash";

    public static final String FUNC_PLATONBLOCKNUMBER = "platonBlockNumber";

    public static final String FUNC_PLATONGASLIMIT = "platonGasLimit";

    public static final String FUNC_PLATONGAS = "platonGas";

    public static final String FUNC_PLATONTIMESTAMP = "platonTimestamp";

    public static final String FUNC_PLATONCOINBASE = "platonCoinbase";

    public static final String FUNC_PLATONSHA256 = "platonSha256";

    public static final String FUNC_PLATONBALANCE = "platonBalance";

    public static final String FUNC_PLATONORIGIN = "platonOrigin";

    public static final String FUNC_PLATONCALLER = "platonCaller";

    public static final String FUNC_PLATONCALLVALUE = "platonCallValue";

    public static final String FUNC_PLATONADDRESS = "platonAddress";

    public static final String FUNC_PLATONCALLERNONCE = "platonCallerNonce";

    public static final String FUNC_PLATONTRANSFER = "platonTransfer";

    public static final String FUNC_PLATONSETSTATE = "platonSetState";

    public static final String FUNC_PLATONGETSTATE = "platonGetState";

    public static final String FUNC_PLATONGETINPUTLENGTH = "platonGetInputLength";

    public static final String FUNC_PLATONGETINPUT = "platonGetInput";

    public static final String FUNC_PLATONGETCALLOUTPUTLENGTH = "platonGetCallOutputLength";

    public static final String FUNC_PLATONGETCALLOUTPUT = "platonGetCallOutput";

    public static final String FUNC_PLATONRETURN = "platonReturn";

    public static final String FUNC_PLATONREVERT = "platonRevert";

    public static final String FUNC_PLATONDEBUG = "platonDebug";

    public static final String FUNC_PLATONCALL = "platonCall";

    public static final String FUNC_PLATONDELEGATECALL = "platonDelegateCall";

    public static final String FUNC_PLATONDESTORY = "platonDestory";

    public static final String FUNC_PLATONMIGRATECLONE = "platonMigrateClone";

    public static final String FUNC_PLATONEVENT = "platonEvent";

    public static final String FUNC_PLATONRLPBYTES = "platonRlpBytes";

    public static final String FUNC_PLATONRLPLISTSIZE = "platonRlpListSize";

    public static final String FUNC_PLATONRLPLIST = "platonRlpList";

    public static final String FUNC_PLATONCONTRACTCODELENGTH = "platonContractCodeLength";

    public static final String FUNC_PLATONCONTRACTCODE = "platonContractCode";

    public static final String FUNC_PLATONDEPLOY = "platonDeploy";

    public static final String FUNC_PLATONCLONE = "platonClone";

    public static final WasmEvent GASUSED_EVENT = new WasmEvent("GasUsed", Arrays.asList(new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(Uint64.class)));
    ;

    protected GasPrice(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected GasPrice(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public RemoteCall<TransactionReceipt> platonSha3(byte[] src) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONSHA3, Arrays.asList(src, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonSha3(byte[] src, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONSHA3, Arrays.asList(src, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonMigrate(WasmAddress contract_address) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONMIGRATE, Arrays.asList(contract_address), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonMigrate(WasmAddress contract_address, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONMIGRATE, Arrays.asList(contract_address), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonPanic() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONPANIC, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonPanic(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONPANIC, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonGetStateLength(byte[] key) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETSTATELENGTH, Arrays.asList(key, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonGetStateLength(byte[] key, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETSTATELENGTH, Arrays.asList(key, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<GasUsedEventResponse> getGasUsedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(GASUSED_EVENT, transactionReceipt);
        ArrayList<GasUsedEventResponse> responses = new ArrayList<GasUsedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            GasUsedEventResponse typedResponse = new GasUsedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint64) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<GasUsedEventResponse> gasUsedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, GasUsedEventResponse>() {
            @Override
            public GasUsedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(GASUSED_EVENT, log);
                GasUsedEventResponse typedResponse = new GasUsedEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint64) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<GasUsedEventResponse> gasUsedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(GASUSED_EVENT));
        return gasUsedEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> platonEcrecover(Uint8[] hash, byte[] sig) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONECRECOVER, Arrays.asList(hash,sig), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonEcrecover(Uint8[] hash, byte[] sig, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONECRECOVER, Arrays.asList(hash,sig), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonRipemd160(byte[] src) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRIPEMD160, Arrays.asList(src, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonRipemd160(byte[] src, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRIPEMD160, Arrays.asList(src, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonRlpU128Size(Uint64 heigh, Uint64 low) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPU128SIZE, Arrays.asList(heigh,low), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonRlpU128Size(Uint64 heigh, Uint64 low, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPU128SIZE, Arrays.asList(heigh,low), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonRlpBytesSize(byte[] data) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPBYTESSIZE, Arrays.asList(data, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonRlpBytesSize(byte[] data, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPBYTESSIZE, Arrays.asList(data, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonRlpU128(Uint64 heigh, Uint64 low) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPU128, Arrays.asList(heigh,low), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonRlpU128(Uint64 heigh, Uint64 low, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPU128, Arrays.asList(heigh,low), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public static RemoteCall<GasPrice> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(GasPrice.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<GasPrice> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(GasPrice.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<GasPrice> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(GasPrice.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<GasPrice> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(GasPrice.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public RemoteCall<TransactionReceipt> platonGasPrice() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGASPRICE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonGasPrice(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGASPRICE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonBlockHash(Int64 num) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONBLOCKHASH, Arrays.asList(num), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonBlockHash(Int64 num, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONBLOCKHASH, Arrays.asList(num), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonBlockNumber() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONBLOCKNUMBER, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonBlockNumber(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONBLOCKNUMBER, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonGasLimit() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGASLIMIT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonGasLimit(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGASLIMIT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonGas() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGAS, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonGas(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGAS, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonTimestamp() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONTIMESTAMP, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonTimestamp(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONTIMESTAMP, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonCoinbase() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCOINBASE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonCoinbase(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCOINBASE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonSha256(byte[] src) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONSHA256, Arrays.asList(src, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonSha256(byte[] src, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONSHA256, Arrays.asList(src, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonBalance(Uint8[] addr) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONBALANCE, Arrays.asList(addr, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonBalance(Uint8[] addr, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONBALANCE, Arrays.asList(addr, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonOrigin() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONORIGIN, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonOrigin(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONORIGIN, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonCaller() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCALLER, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonCaller(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCALLER, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonCallValue() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCALLVALUE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonCallValue(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCALLVALUE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonAddress() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONADDRESS, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonAddress(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONADDRESS, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonCallerNonce() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCALLERNONCE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonCallerNonce(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCALLERNONCE, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonTransfer(Uint8[] to) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONTRANSFER, Arrays.asList(to, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonTransfer(Uint8[] to, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONTRANSFER, Arrays.asList(to, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonSetState(byte[] key, byte[] value) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONSETSTATE, Arrays.asList(key,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonSetState(byte[] key, byte[] value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONSETSTATE, Arrays.asList(key,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonGetState(byte[] key, Uint32 length) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETSTATE, Arrays.asList(key,length), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonGetState(byte[] key, Uint32 length, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETSTATE, Arrays.asList(key,length), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonGetInputLength() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETINPUTLENGTH, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonGetInputLength(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETINPUTLENGTH, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonGetInput() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETINPUT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonGetInput(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETINPUT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonGetCallOutputLength() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETCALLOUTPUTLENGTH, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonGetCallOutputLength(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETCALLOUTPUTLENGTH, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonGetCallOutput() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETCALLOUTPUT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonGetCallOutput(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONGETCALLOUTPUT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonReturn(Uint32 length) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRETURN, Arrays.asList(length), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonReturn(Uint32 length, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRETURN, Arrays.asList(length), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonRevert() {
        final WasmFunction function = new WasmFunction(FUNC_PLATONREVERT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonRevert(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONREVERT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonDebug(Uint32 length) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONDEBUG, Arrays.asList(length), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonDebug(Uint32 length, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONDEBUG, Arrays.asList(length), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonCall(WasmAddress contract_address, String method) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCALL, Arrays.asList(contract_address,method), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonCall(WasmAddress contract_address, String method, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCALL, Arrays.asList(contract_address,method), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonDelegateCall(WasmAddress contract_address, String method) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONDELEGATECALL, Arrays.asList(contract_address,method), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonDelegateCall(WasmAddress contract_address, String method, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONDELEGATECALL, Arrays.asList(contract_address,method), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonDestory(WasmAddress to) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONDESTORY, Arrays.asList(to), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonDestory(WasmAddress to, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONDESTORY, Arrays.asList(to), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonMigrateClone(WasmAddress contract_address) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONMIGRATECLONE, Arrays.asList(contract_address), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonMigrateClone(WasmAddress contract_address, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONMIGRATECLONE, Arrays.asList(contract_address), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonEvent(byte[] topic, byte[] args) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONEVENT, Arrays.asList(topic,args), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonEvent(byte[] topic, byte[] args, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONEVENT, Arrays.asList(topic,args), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonRlpBytes(byte[] data) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPBYTES, Arrays.asList(data, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonRlpBytes(byte[] data, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPBYTES, Arrays.asList(data, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonRlpListSize(Uint32 len) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPLISTSIZE, Arrays.asList(len), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonRlpListSize(Uint32 len, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPLISTSIZE, Arrays.asList(len), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonRlpList(byte[] data) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPLIST, Arrays.asList(data, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonRlpList(byte[] data, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONRLPLIST, Arrays.asList(data, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonContractCodeLength(Uint8[] addr) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCONTRACTCODELENGTH, Arrays.asList(addr, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonContractCodeLength(Uint8[] addr, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCONTRACTCODELENGTH, Arrays.asList(addr, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonContractCode(Uint8[] addr) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCONTRACTCODE, Arrays.asList(addr, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonContractCode(Uint8[] addr, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCONTRACTCODE, Arrays.asList(addr, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonDeploy(WasmAddress contract_address) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONDEPLOY, Arrays.asList(contract_address), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonDeploy(WasmAddress contract_address, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONDEPLOY, Arrays.asList(contract_address), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> platonClone(WasmAddress contract_address) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCLONE, Arrays.asList(contract_address), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> platonClone(WasmAddress contract_address, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_PLATONCLONE, Arrays.asList(contract_address), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public static GasPrice load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new GasPrice(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static GasPrice load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new GasPrice(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public static class GasUsedEventResponse {
        public Log log;

        public String topic;

        public Uint64 arg1;
    }
}

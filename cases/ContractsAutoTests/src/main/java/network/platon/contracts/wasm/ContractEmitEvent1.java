package network.platon.contracts.wasm;

import com.platon.rlp.datatypes.Uint32;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.web3j.abi.WasmEventEncoder;
import org.web3j.abi.WasmFunctionEncoder;
import org.web3j.abi.datatypes.WasmEvent;
import org.web3j.abi.datatypes.WasmEventParameter;
import org.web3j.abi.datatypes.WasmFunction;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.PlatonFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.WasmContract;
import org.web3j.tx.gas.GasProvider;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the org.web3j.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.13.1.5.
 */
public class ContractEmitEvent1 extends WasmContract {
    private static String BINARY_0 = "";

    public static String BINARY = BINARY_0;

    public static final String FUNC_GET_STRING = "get_string";

    public static final String FUNC_ONE_EMIT_EVENT1 = "one_emit_event1";

    public static final String FUNC_ONE_EMIT_EVENT1_ARGS2 = "one_emit_event1_args2";

    public static final String FUNC_ONE_EMIT_EVENT1_ARGS9 = "one_emit_event1_args9";

    public static final WasmEvent TRANSFER_EVENT = new WasmEvent("transfer", Arrays.asList(new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(Uint32.class)));
    ;

    public static final WasmEvent TRANSFER2_EVENT = new WasmEvent("transfer2", Arrays.asList(new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(Uint32.class) , new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent TRANSFER3_EVENT = new WasmEvent("transfer3", Arrays.asList(new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(Uint32.class) , new WasmEventParameter(String.class) , new WasmEventParameter(String.class) , new WasmEventParameter(String.class) , new WasmEventParameter(String.class) , new WasmEventParameter(String.class) , new WasmEventParameter(Uint32.class) , new WasmEventParameter(Uint32.class) , new WasmEventParameter(String.class)));
    ;

    protected ContractEmitEvent1(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected ContractEmitEvent1(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public RemoteCall<String> get_string() {
        final WasmFunction function = new WasmFunction(FUNC_GET_STRING, Arrays.asList(), String.class);
        return executeRemoteCall(function, String.class);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TransferEventResponse> transferEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<TransferEventResponse> transferEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER_EVENT));
        return transferEventObservable(filter);
    }

    public List<Transfer2EventResponse> getTransfer2Events(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER2_EVENT, transactionReceipt);
        ArrayList<Transfer2EventResponse> responses = new ArrayList<Transfer2EventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            Transfer2EventResponse typedResponse = new Transfer2EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (String) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<Transfer2EventResponse> transfer2EventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, Transfer2EventResponse>() {
            @Override
            public Transfer2EventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER2_EVENT, log);
                Transfer2EventResponse typedResponse = new Transfer2EventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (String) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<Transfer2EventResponse> transfer2EventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER2_EVENT));
        return transfer2EventObservable(filter);
    }

    public List<Transfer3EventResponse> getTransfer3Events(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER3_EVENT, transactionReceipt);
        ArrayList<Transfer3EventResponse> responses = new ArrayList<Transfer3EventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            Transfer3EventResponse typedResponse = new Transfer3EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (String) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (String) eventValues.getNonIndexedValues().get(3);
            typedResponse.arg5 = (String) eventValues.getNonIndexedValues().get(4);
            typedResponse.arg6 = (String) eventValues.getNonIndexedValues().get(5);
            typedResponse.arg7 = (Uint32) eventValues.getNonIndexedValues().get(6);
            typedResponse.arg8 = (Uint32) eventValues.getNonIndexedValues().get(7);
            typedResponse.arg9 = (String) eventValues.getNonIndexedValues().get(8);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<Transfer3EventResponse> transfer3EventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, Transfer3EventResponse>() {
            @Override
            public Transfer3EventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER3_EVENT, log);
                Transfer3EventResponse typedResponse = new Transfer3EventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (String) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (String) eventValues.getNonIndexedValues().get(3);
                typedResponse.arg5 = (String) eventValues.getNonIndexedValues().get(4);
                typedResponse.arg6 = (String) eventValues.getNonIndexedValues().get(5);
                typedResponse.arg7 = (Uint32) eventValues.getNonIndexedValues().get(6);
                typedResponse.arg8 = (Uint32) eventValues.getNonIndexedValues().get(7);
                typedResponse.arg9 = (String) eventValues.getNonIndexedValues().get(8);
                return typedResponse;
            }
        });
    }

    public Observable<Transfer3EventResponse> transfer3EventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER3_EVENT));
        return transfer3EventObservable(filter);
    }

    public static RemoteCall<ContractEmitEvent1> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEvent1.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<ContractEmitEvent1> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEvent1.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<ContractEmitEvent1> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEvent1.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<ContractEmitEvent1> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEvent1.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public RemoteCall<TransactionReceipt> one_emit_event1(String name, Uint32 value) {
        final WasmFunction function = new WasmFunction(FUNC_ONE_EMIT_EVENT1, Arrays.asList(name,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> one_emit_event1(String name, Uint32 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_ONE_EMIT_EVENT1, Arrays.asList(name,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> one_emit_event1_args2(String name, Uint32 value) {
        final WasmFunction function = new WasmFunction(FUNC_ONE_EMIT_EVENT1_ARGS2, Arrays.asList(name,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> one_emit_event1_args2(String name, Uint32 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_ONE_EMIT_EVENT1_ARGS2, Arrays.asList(name,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> one_emit_event1_args9(String topic, Uint32 value, String name1, String name2, String name3, String name4, String name5, Uint32 value2, Uint32 value3, String name6) {
        final WasmFunction function = new WasmFunction(FUNC_ONE_EMIT_EVENT1_ARGS9, Arrays.asList(topic,value,name1,name2,name3,name4,name5,value2,value3,name6), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> one_emit_event1_args9(String topic, Uint32 value, String name1, String name2, String name3, String name4, String name5, Uint32 value2, Uint32 value3, String name6, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_ONE_EMIT_EVENT1_ARGS9, Arrays.asList(topic,value,name1,name2,name3,name4,name5,value2,value3,name6), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public static ContractEmitEvent1 load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new ContractEmitEvent1(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static ContractEmitEvent1 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new ContractEmitEvent1(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public static class TransferEventResponse {
        public Log log;

        public String topic;

        public Uint32 arg1;
    }

    public static class Transfer2EventResponse {
        public Log log;

        public String topic;

        public Uint32 arg1;

        public String arg2;
    }

    public static class Transfer3EventResponse {
        public Log log;

        public String topic;

        public Uint32 arg1;

        public String arg2;

        public String arg3;

        public String arg4;

        public String arg5;

        public String arg6;

        public Uint32 arg7;

        public Uint32 arg8;

        public String arg9;
    }
}

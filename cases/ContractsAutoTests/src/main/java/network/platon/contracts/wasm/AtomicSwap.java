package network.platon.contracts.wasm;

import com.platon.rlp.datatypes.Uint128;
import com.platon.rlp.datatypes.Uint64;
import com.platon.rlp.datatypes.WasmAddress;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.web3j.abi.WasmEventEncoder;
import org.web3j.abi.WasmFunctionEncoder;
import org.web3j.abi.datatypes.WasmEvent;
import org.web3j.abi.datatypes.WasmEventParameter;
import org.web3j.abi.datatypes.WasmFunction;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.PlatonFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.WasmContract;
import org.web3j.tx.gas.GasProvider;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the org.web3j.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.13.1.5.
 */
public class AtomicSwap extends WasmContract {
    private static String BINARY_0 = "";

    public static String BINARY = BINARY_0;

    public static final String FUNC_REFUND = "refund";

    public static final String FUNC_ADD = "add";

    public static final String FUNC_SUB = "sub";

    public static final String FUNC_DESTRUCT = "destruct";

    public static final String FUNC_INITIATE = "initiate";

    public static final String FUNC_REDEEM = "redeem";

    public static final WasmEvent ADDED_EVENT = new WasmEvent("Added", Arrays.asList(), Arrays.asList(new WasmEventParameter(byte[].class) , new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent INITIATED_EVENT = new WasmEvent("Initiated", Arrays.asList(new WasmEventParameter(byte[].class, true)), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(Uint64.class) , new WasmEventParameter(Uint128.class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent REDEEMED_EVENT = new WasmEvent("Redeemed", Arrays.asList(), Arrays.asList(new WasmEventParameter(byte[].class) , new WasmEventParameter(byte[].class)));
    ;

    public static final WasmEvent REFUNDED_EVENT = new WasmEvent("Refunded", Arrays.asList(), Arrays.asList(new WasmEventParameter(byte[].class)));
    ;

    protected AtomicSwap(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected AtomicSwap(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public RemoteCall<TransactionReceipt> refund(byte[] _hashedSecret) {
        final WasmFunction function = new WasmFunction(FUNC_REFUND, Arrays.asList(_hashedSecret, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> refund(byte[] _hashedSecret, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_REFUND, Arrays.asList(_hashedSecret, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> add(Uint128 a, Uint128 b) {
        final WasmFunction function = new WasmFunction(FUNC_ADD, Arrays.asList(a,b), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> add(Uint128 a, Uint128 b, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_ADD, Arrays.asList(a,b), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> sub(Uint128 a, Uint128 b) {
        final WasmFunction function = new WasmFunction(FUNC_SUB, Arrays.asList(a,b), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> sub(Uint128 a, Uint128 b, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SUB, Arrays.asList(a,b), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<AddedEventResponse> getAddedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(ADDED_EVENT, transactionReceipt);
        ArrayList<AddedEventResponse> responses = new ArrayList<AddedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            AddedEventResponse typedResponse = new AddedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<AddedEventResponse> addedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, AddedEventResponse>() {
            @Override
            public AddedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(ADDED_EVENT, log);
                AddedEventResponse typedResponse = new AddedEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (Uint128) eventValues.getNonIndexedValues().get(2);
                return typedResponse;
            }
        });
    }

    public Observable<AddedEventResponse> addedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(ADDED_EVENT));
        return addedEventObservable(filter);
    }

    public List<InitiatedEventResponse> getInitiatedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(INITIATED_EVENT, transactionReceipt);
        ArrayList<InitiatedEventResponse> responses = new ArrayList<InitiatedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            InitiatedEventResponse typedResponse = new InitiatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (Uint64) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (Uint128) eventValues.getNonIndexedValues().get(3);
            typedResponse.arg5 = (Uint128) eventValues.getNonIndexedValues().get(4);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<InitiatedEventResponse> initiatedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, InitiatedEventResponse>() {
            @Override
            public InitiatedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(INITIATED_EVENT, log);
                InitiatedEventResponse typedResponse = new InitiatedEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (WasmAddress) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (Uint64) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (Uint128) eventValues.getNonIndexedValues().get(3);
                typedResponse.arg5 = (Uint128) eventValues.getNonIndexedValues().get(4);
                return typedResponse;
            }
        });
    }

    public Observable<InitiatedEventResponse> initiatedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(INITIATED_EVENT));
        return initiatedEventObservable(filter);
    }

    public List<RedeemedEventResponse> getRedeemedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(REDEEMED_EVENT, transactionReceipt);
        ArrayList<RedeemedEventResponse> responses = new ArrayList<RedeemedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            RedeemedEventResponse typedResponse = new RedeemedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (byte[]) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<RedeemedEventResponse> redeemedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, RedeemedEventResponse>() {
            @Override
            public RedeemedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(REDEEMED_EVENT, log);
                RedeemedEventResponse typedResponse = new RedeemedEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (byte[]) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<RedeemedEventResponse> redeemedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(REDEEMED_EVENT));
        return redeemedEventObservable(filter);
    }

    public List<RefundedEventResponse> getRefundedEvents(TransactionReceipt transactionReceipt) {
        List<WasmEventValuesWithLog> valueList = extractEventParametersWithLog(REFUNDED_EVENT, transactionReceipt);
        ArrayList<RefundedEventResponse> responses = new ArrayList<RefundedEventResponse>(valueList.size());
        for (WasmEventValuesWithLog eventValues : valueList) {
            RefundedEventResponse typedResponse = new RefundedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<RefundedEventResponse> refundedEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, RefundedEventResponse>() {
            @Override
            public RefundedEventResponse call(Log log) {
                WasmEventValuesWithLog eventValues = extractEventParametersWithLog(REFUNDED_EVENT, log);
                RefundedEventResponse typedResponse = new RefundedEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<RefundedEventResponse> refundedEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(REFUNDED_EVENT));
        return refundedEventObservable(filter);
    }

    public static RemoteCall<AtomicSwap> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(AtomicSwap.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<AtomicSwap> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(AtomicSwap.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<AtomicSwap> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(AtomicSwap.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<AtomicSwap> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(AtomicSwap.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public RemoteCall<TransactionReceipt> destruct() {
        final WasmFunction function = new WasmFunction(FUNC_DESTRUCT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> destruct(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_DESTRUCT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> initiate(byte[] _hashedSecret, WasmAddress _participant, Uint64 _refundTimestamp, Uint128 _payoff) {
        final WasmFunction function = new WasmFunction(FUNC_INITIATE, Arrays.asList(_hashedSecret,_participant,_refundTimestamp,_payoff), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> initiate(byte[] _hashedSecret, WasmAddress _participant, Uint64 _refundTimestamp, Uint128 _payoff, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_INITIATE, Arrays.asList(_hashedSecret,_participant,_refundTimestamp,_payoff), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> add(byte[] _hashedSecret) {
        final WasmFunction function = new WasmFunction(FUNC_ADD, Arrays.asList(_hashedSecret, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> add(byte[] _hashedSecret, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_ADD, Arrays.asList(_hashedSecret, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> redeem(byte[] _hashedSecret, byte[] _secret) {
        final WasmFunction function = new WasmFunction(FUNC_REDEEM, Arrays.asList(_hashedSecret,_secret), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> redeem(byte[] _hashedSecret, byte[] _secret, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_REDEEM, Arrays.asList(_hashedSecret,_secret), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public static AtomicSwap load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new AtomicSwap(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static AtomicSwap load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new AtomicSwap(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public static class AddedEventResponse {
        public Log log;

        public byte[] arg1;

        public WasmAddress arg2;

        public Uint128 arg3;
    }

    public static class InitiatedEventResponse {
        public Log log;

        public String topic;

        public WasmAddress arg1;

        public WasmAddress arg2;

        public Uint64 arg3;

        public Uint128 arg4;

        public Uint128 arg5;
    }

    public static class RedeemedEventResponse {
        public Log log;

        public byte[] arg1;

        public byte[] arg2;
    }

    public static class RefundedEventResponse {
        public Log log;

        public byte[] arg1;
    }
}

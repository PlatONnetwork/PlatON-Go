// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 4byte_tracer_legacy.js (3.019kB)
// bigram_tracer.js (1.759kB)
// call_tracer_js.js (3.607kB)
// call_tracer_legacy.js (9.208kB)
// evmdis_tracer.js (4.308kB)
// noop_tracer.js (1.3kB)
// opcount_tracer.js (1.404kB)
// prestate_tracer.js (4.395kB)
// trigram_tracer.js (1.837kB)
// unigram_tracer.js (1.51kB)

package tracers

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __4byte_tracer_legacyJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x5d\x6f\xdb\xca\x11\x7d\x96\x01\xff\x87\xa9\x5e\x22\x21\x14\x65\x7d\xd8\xfa\x48\x13\x40\xf5\x75\x12\x03\xbe\xb6\x61\x29\xbd\x08\x8a\x3e\xac\x76\x87\xe2\xd6\xd4\x2e\xb1\x3b\x94\xac\xe4\xfa\xbf\x17\xb3\x24\x2d\x59\xf5\x6d\x6f\x5f\x2c\x93\xdc\x39\x73\x66\xe6\xcc\xcc\x76\xbb\x70\x69\xf3\x9d\xd3\xab\x94\xa0\x7f\xd6\x1b\xc1\x22\x45\x58\xd9\x0e\x52\x8a\x0e\x8b\x35\xcc\x0a\x4a\xad\xf3\xa7\x27\xdd\x2e\x2c\x52\xed\x21\xd1\x19\x82\xf6\x90\x0b\x47\x60\x13\xa0\x23\x83\x4c\x2f\x9d\x70\xbb\x98\x2d\x2a\xab\x37\x0f\x30\x46\xe2\x10\xc1\xdb\x84\xb6\xc2\xe1\x14\x76\xb6\x00\x29\x0c\x38\x54\xda\x93\xd3\xcb\x82\x10\x34\x81\x30\xaa\x6b\x1d\xac\xad\xd2\xc9\x2e\x60\x6a\x82\xc2\x28\x74\xc1\x3b\xa1\x5b\xfb\x9a\xca\x97\xdb\x6f\x70\x83\xde\xa3\x83\x2f\x68\xd0\x89\x0c\xee\x8b\x65\xa6\x25\xdc\x68\x89\xc6\x23\x08\x0f\x39\xbf\xf1\x29\x2a\x58\x96\x78\x6c\xf9\x99\xc9\xcc\x2b\x32\xf0\xd9\x16\x46\x09\xd2\xd6\x44\x80\x9a\xb9\xc3\x06\x9d\xd7\xd6\xc0\xa0\xf6\x55\x21\x46\x60\x5d\x40\x69\x09\xe2\x18\x1c\xd8\x9c\x0d\xdb\x20\xcc\x0e\x32\x41\x7b\xdb\x3f\x95\x95\x7d\xf0\x0a\xb4\x09\x9e\x52\x9b\x23\x50\x2a\x88\x23\xdf\xea\x2c\x83\x25\x42\xe1\x31\x29\xb2\x28\xc0\x2d\x0b\x82\xdf\xae\x17\x5f\xef\xbe\x2d\x60\x76\xfb\x1d\x7e\x9b\x3d\x3c\xcc\x6e\x17\xdf\x3f\xc0\x56\x53\x6a\x0b\x02\xdc\x60\x89\xa5\xd7\x79\xa6\x51\xc1\x56\x38\x27\x0c\xed\xc0\x26\x01\xe2\xd7\xab\x87\xcb\xaf\xb3\xdb\xc5\xec\x6f\xd7\x37\xd7\x8b\xef\x60\x1d\x7c\xbe\x5e\xdc\x5e\xcd\xe7\xf0\xf9\xee\x01\x66\x70\x3f\x7b\x58\x5c\x5f\x7e\xbb\x99\x3d\xc0\xfd\xb7\x87\xfb\xbb\xf9\x55\x0c\x73\x64\x5e\x18\x00\xfe\x77\xea\x93\x50\x45\x87\xa0\x90\x84\xce\xfc\x3e\x1d\xdf\x6d\x01\x3e\xb5\x45\xa6\x20\x15\x1b\x04\x87\x12\xf5\x06\x15\x08\x90\x36\xdf\xfd\xe9\xea\x06\x30\x91\x59\xb3\x0a\x81\xff\xa1\x3a\xe1\x3a\x01\x63\x29\x02\x8f\x08\x7f\x4d\x89\xf2\x69\xb7\xbb\xdd\x6e\xe3\x95\x29\x62\xeb\x56\xdd\xac\xc4\xf3\xdd\x4f\xf1\xe9\x49\x40\x1d\x2e\x77\x84\x0b\x27\x24\x3a\xf0\x28\x9c\x4c\xd1\x87\x88\xc2\x87\x8e\x56\x68\x48\x27\x1a\x9d\x8f\x58\xb1\x20\x6d\x96\xa1\x24\xcf\x1c\xd6\xe1\x60\x6e\x3d\x75\x72\x67\x25\x7a\xaf\xcd\x2a\x44\x0f\xd7\xf4\xea\x24\xac\x91\x52\xab\x3c\x1c\xe0\x1d\x07\xe4\xf5\x0f\xac\x33\xe2\x8b\xbc\x2c\xa7\x12\x24\x22\xf0\xb6\xcc\x00\x38\x64\xc9\xa1\x02\xaf\x57\x46\x50\xe1\x30\xb4\xd6\x12\x61\x2d\x48\xb2\xf4\xc5\x4a\x68\xe3\xe9\x3f\x10\x19\x68\x5f\x98\xab\x27\xb1\xce\x33\x9c\x86\x07\x80\x4f\xa0\x70\x59\xac\x62\xe2\x3c\x2c\x9c\x30\x5e\x48\xd6\x7a\x0b\x9a\x67\x4f\xfd\xde\x10\xcf\x27\x23\x1c\x9c\x2b\x71\x36\x1e\x5c\x4c\xfa\xc9\xf9\x60\x7c\xd1\x1b\xf6\xf0\x62\x92\x0c\x47\x38\x19\x0d\x96\x7d\x79\x7e\x81\x23\x31\x3e\x1b\x0d\x96\x3d\x14\x67\xe3\x44\x8d\xce\x47\x3d\x9c\x28\x6c\x46\xf0\x33\x00\xbb\x29\x34\x0f\xd2\xdd\x7c\x6e\x57\xee\x7f\x56\xbf\x00\x67\x4f\xfd\x91\x92\xfd\xc9\x08\x3b\xbd\xfe\x78\x0a\xbd\xe8\xe0\xd3\x60\x2c\xe5\x70\x3c\xe8\x75\xce\xa6\xd0\x3f\xfc\x70\xde\x1f\x26\x83\xf1\x78\xd2\x99\x5c\x1c\x99\x08\x95\x9c\x4f\x92\xc9\xa4\xd3\x1f\x1f\xa3\xc9\xfe\xb8\xa7\x7a\x13\x64\xb4\x5e\xf5\xfe\xf9\xf4\xe4\xe7\xe9\x49\x83\x47\x91\xf2\x20\x56\x2b\x87\x2b\x41\x58\x96\x30\x50\x0f\x1f\x12\x9e\x22\xf1\xe9\x49\x83\x1f\xa6\xf0\xf3\x39\x62\x31\xb1\x99\x14\x59\xb6\xd8\xe5\xac\x74\x2a\x9c\xf1\xf0\x2e\x11\x99\xc7\x77\x41\x28\xc6\x9a\x0e\x1f\xf0\x3c\x5a\x02\x64\x8e\xf8\xd8\xd1\x46\xe1\x53\x38\xc0\xaf\x12\xed\x3c\xf1\x18\x16\xeb\x12\x52\x24\x3c\x69\xde\x6d\x44\x56\xe0\xbb\x08\x74\x8c\x31\xac\x71\xcd\x45\x16\x8e\x98\x45\xed\x74\x0a\x49\x61\xca\xba\xd9\xdc\x93\x6b\x73\x2c\x0d\xbf\xd5\x24\xd3\xc3\x37\x52\x78\x84\xe6\xe5\xec\xe6\xa6\x39\x85\xfd\xc3\xe5\xdd\x2f\x57\xcd\x29\x1f\x60\xb7\x2b\xc1\x82\x57\xca\x45\xb0\x11\x59\x54\xba\xac\x7e\xfc\x8f\xf0\x8f\x2d\xa8\xfe\xf5\x3f\x82\x5d\x19\x35\x0c\x3e\x40\xb7\x0b\x9e\x84\x7c\x84\x9c\x1c\x90\x2d\xed\x42\x96\x2a\xf7\xbf\x5c\xdd\x5c\x7d\x99\x2d\xae\x5e\xd1\x98\x2f\x66\x8b\xeb\xcb\xf2\xd5\x1b\x44\xfe\x1f\x0e\xfd\x3f\xe4\xd0\x68\x3c\xf3\x9f\xea\x5c\xa8\xcf\x87\xd3\x93\xc6\xbe\x88\x9e\x78\x98\x79\x1e\x58\x61\xd0\x68\x9e\xb1\x5c\xa5\xaa\x73\xc3\x1c\xe0\x7e\xe2\xfe\xe2\x02\x04\x83\x83\xec\x6b\x15\x85\xde\x2b\xd3\xbd\x11\x0e\x1e\x71\x07\x1f\xa1\xd9\x84\xf7\x40\xf6\x2b\x3e\xb5\xb4\x6a\xc3\x7b\x68\x76\xf8\x0d\x1f\x65\x06\x0d\x4a\xb5\x8f\xb5\xf2\xff\x78\xc4\xdd\x3f\xe1\x23\xbc\x7e\x7e\x0f\x3d\xf8\xfd\x77\xe8\x1d\x93\xc5\x9c\xd7\x8b\x36\x1b\xfb\x88\x2a\xe8\x88\x87\xc4\x0e\x6c\x2e\xad\xaa\xf6\x0b\xc7\xf1\xf7\x5f\x01\x9f\x50\x16\x84\xbe\x24\x8d\xf9\x01\xe7\xcc\xae\x22\x50\xcb\x36\x04\xce\xdd\x2e\xcc\x1f\x75\x1e\x56\x5d\x89\xe3\x4b\x20\x5e\xa2\xc6\x12\x68\x43\xe8\x8c\xc8\x82\xe2\x7d\x1d\xa6\xa4\x9a\x75\xad\x49\xc6\x8d\x6d\x1e\x93\x9d\x93\xd3\x66\xd5\x6a\xb7\x43\xa8\x3a\x81\xd6\x5f\x24\x55\xee\xaa\x62\x7c\x78\x29\xce\xa1\xff\xdc\x61\x47\xda\x75\x1e\x6e\x28\x66\x63\x65\xd8\xdf\x3e\x02\x4a\x2d\x2f\x7e\x87\xf0\xaf\xc2\x13\x24\xc2\xc8\x17\xb6\xb5\x0f\xed\xef\x1d\x56\xd6\xaa\x45\x76\xa6\x94\x43\xef\x03\xad\x20\x8e\x98\x7b\xb0\xd5\x6b\xef\x19\xf6\x2e\xda\xed\xf6\x7f\x21\xf6\x45\x84\x7b\xc3\xab\x0c\xd4\xab\xaf\x4e\x84\x36\xf3\x1f\xf0\x11\x8e\xbc\x48\xe2\x22\xb6\xe3\xd0\xcb\x77\x49\x6b\x9f\x8a\x70\xfe\xd3\x47\x18\xd6\x7e\x4b\x90\xbb\x24\x79\x0b\xe5\x18\xa1\x14\x4e\x50\x61\x08\x8c\xfb\xc1\xed\x62\xcf\xdb\xae\x15\x50\xa2\x0a\xec\x3d\x0c\xdb\x51\x60\xd7\x19\xb6\x5f\xa2\xda\xab\x29\x11\x45\x46\x87\x72\xda\xa6\xd5\xfd\x42\x48\x2a\x44\x56\x29\x88\xef\x4b\x36\x01\x61\x6a\x91\x25\xd5\xde\x6f\x04\x80\x37\x65\x05\x7b\x2f\x0e\xfd\x5b\x6e\x38\x8f\xec\xaa\x16\x5c\xb8\x32\x2c\x91\x9b\x8f\xd0\x09\xbe\x38\xd9\x4d\xd5\x7e\xd5\x7c\x2d\xf1\xca\xb9\xc9\xb5\xa8\x90\xab\x9d\xc7\x5b\xa7\xdc\xc8\x8d\xf2\xc3\x01\x31\x49\x4f\x07\x5a\xaf\x7b\xdd\x16\x3c\x6c\xb9\xa2\xdc\xdf\x20\x32\xde\xbc\x65\x89\x24\x3d\xc5\xda\xe4\x05\xc5\x19\x9a\x15\xa5\xaf\xca\x75\x50\x80\x32\xeb\x2f\xa7\x23\x38\x8b\x42\xd2\x8f\xed\x3b\xc3\xf6\xf1\x2c\xaa\xfb\xbd\xee\xf0\xe7\xd3\x93\x7f\x07\x00\x00\xff\xff\xc2\x03\xe3\xc9\xcb\x0b\x00\x00")

func _4byte_tracer_legacyJsBytes() ([]byte, error) {
	return bindataRead(
		__4byte_tracer_legacyJs,
		"4byte_tracer_legacy.js",
	)
}

func _4byte_tracer_legacyJs() (*asset, error) {
	bytes, err := _4byte_tracer_legacyJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4byte_tracer_legacy.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0xe7, 0xdf, 0xd5, 0xd3, 0xbc, 0x20, 0x57, 0x12, 0x71, 0xe1, 0x39, 0xee, 0xb4, 0x37, 0xa0, 0x41, 0x24, 0x54, 0x31, 0xac, 0xb, 0x1b, 0x60, 0x97, 0x79, 0x61, 0xc5, 0x78, 0x49, 0xa9, 0x6b}}
	return a, nil
}

var _bigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x5f\x6f\xdb\x36\x14\xc5\xdf\x0d\xf8\x3b\x9c\xb7\x24\x88\x6b\xb5\xdb\xcb\xe0\xcc\x03\xbc\x2c\x69\x0d\xa4\x76\x60\x3b\x2b\x82\x61\x0f\x94\x74\x25\x11\xa1\x49\x81\xbc\xb4\x2b\x14\xf9\xee\x05\x29\x39\x96\x83\x14\xad\x9e\x64\xf3\x9c\xdf\xfd\x4b\x25\x09\xae\x4d\xdd\x58\x59\x56\x8c\xdf\xde\x7f\xf8\x03\x9b\x8a\x50\x9a\x77\xc4\x15\x59\xf2\x5b\xcc\x3c\x57\xc6\xba\xe1\x20\x49\xb0\xa9\xa4\x43\x21\x15\x41\x3a\xd4\xc2\x32\x4c\x01\x7e\x65\x50\x32\xb5\xc2\x36\xe3\xe0\xe8\x5c\x6f\x0a\x02\xa3\xb0\x44\x70\xa6\xe0\xbd\xb0\x34\x41\x63\x3c\x32\xa1\x61\x29\x97\x8e\xad\x4c\x3d\x13\x24\x43\xe8\x3c\x31\x16\x5b\x93\xcb\xa2\x89\x4c\xc9\xf0\x3a\x27\x1b\xa3\x33\xd9\xad\x3b\xa4\xf2\x71\xf1\x80\x3b\x72\x8e\x2c\x3e\x92\x26\x2b\x14\xee\x7d\xaa\x64\x86\x3b\x99\x91\x76\x04\xe1\x50\x87\x7f\x5c\x45\x39\xd2\x96\x17\x9c\xb7\x21\x99\x75\x97\x0c\x6e\x8d\xd7\xb9\x60\x69\xf4\x08\x24\x43\xee\xd8\x91\x75\xd2\x68\xfc\x7e\x88\xd5\x11\x47\x30\x36\x52\xce\x05\x87\x1a\x2c\x4c\x1d\x8c\x17\x10\xba\x81\x12\x7c\xf4\xfe\x52\x57\x8e\xc5\xe7\x90\x3a\x46\xaa\x4c\x4d\xe0\x4a\x70\xa8\x7c\x2f\x95\x42\x4a\xf0\x8e\x0a\xaf\x46\x11\x97\x7a\xc6\x97\xf9\xe6\xd3\xf2\x61\x83\xd9\xe2\x11\x5f\x66\xab\xd5\x6c\xb1\x79\xbc\xc2\x5e\x72\x65\x3c\x83\x76\xd4\xb2\xe4\xb6\x56\x92\x72\xec\x85\xb5\x42\x73\x03\x53\x44\xc4\xe7\x9b\xd5\xf5\xa7\xd9\x62\x33\xfb\x7b\x7e\x37\xdf\x3c\xc2\x58\xdc\xce\x37\x8b\x9b\xf5\x1a\xb7\xcb\x15\x66\xb8\x9f\xad\x36\xf3\xeb\x87\xbb\xd9\x0a\xf7\x0f\xab\xfb\xe5\xfa\x66\x8c\x35\x85\xbc\x28\x02\x7e\xde\xfa\x22\x4e\xd1\x12\x72\x62\x21\x95\x3b\xb6\xe3\xd1\x78\xb8\xca\x78\x95\xa3\x12\x3b\x82\xa5\x8c\xe4\x8e\x72\x08\x64\xa6\x6e\x7e\x79\xba\x11\x26\x94\xd1\x65\x2c\xfc\x87\xdb\x89\x79\x01\x6d\x78\x04\x47\x84\x3f\x2b\xe6\x7a\x92\x24\xfb\xfd\x7e\x5c\x6a\x3f\x36\xb6\x4c\x54\xcb\x73\xc9\x5f\xe3\xe1\x60\x38\xf8\x36\x1c\x00\x40\x92\xa0\x92\x8e\xc3\x94\x02\x39\x33\x5e\x33\xd9\xb8\x7c\xa6\xce\x4c\x4e\x48\x65\x69\xc5\xd6\xb5\xf2\xa0\x9d\xe0\xdb\xf3\xe8\xc5\xad\x84\xe3\x65\x1d\xfc\xe1\x0d\xa6\x26\x1b\x97\xac\x15\xb4\xa7\x13\x9c\x9d\x1d\x1d\xf4\x95\x32\x1f\x24\xc8\xa9\xe6\x2a\x84\xea\xac\x47\xcf\x3f\xe1\x64\x82\xf7\x47\x97\x63\x8a\x51\xa4\xde\x99\x27\xca\x63\xe7\x69\x47\xb6\x39\xe4\x19\x97\x29\xd4\xf0\xef\xe7\x2e\x04\x85\x71\x04\x7b\xf0\x4e\x50\x78\x9d\x85\xb0\xe7\xca\x94\x23\xe4\xe9\x05\xba\x1e\x84\x67\x27\xc2\x92\x63\x0a\x65\xca\xb1\xa9\xc7\x6c\xd6\x6c\xa5\x2e\xcf\x2f\xae\x4e\x45\x6d\xce\xad\xae\xa4\x36\xd1\x13\x91\x2c\x70\xde\x89\xa6\xe0\x4a\xba\xf1\x4b\x41\x17\xbd\x80\x07\xde\x13\x35\xe8\xe9\x96\xf5\xe5\xd9\xbb\xb3\x4b\x53\x5f\x9d\x4a\x03\x35\x8a\xc2\x04\xfe\x7b\xa2\xe6\xff\xd7\xb0\xf0\x9c\x2a\x2e\x2f\x5f\x41\x9e\x4f\x7f\x92\x72\x84\x9f\x52\x30\xc5\x87\x1f\x73\x7a\xaf\xbd\x1a\x30\xc5\x49\x05\xa7\x6d\xc0\xb4\xed\x62\x27\xe8\x2d\x53\x21\xbc\xe2\xfe\x94\xf7\x55\x77\xc7\x45\xc6\x5e\xa8\xde\xee\x98\x02\x42\x1f\x66\x5f\x74\x77\x2f\x60\x22\xe3\xcd\x69\xf7\x02\x59\x72\x6f\x45\x12\x4a\xc5\x68\x2d\xd6\xb5\x37\x37\x25\xd2\x90\x1c\xf6\x9a\x72\x98\x1d\xd9\xf0\xfd\x86\x25\xf6\x56\xbb\x17\x64\xf0\x15\x52\x0b\x75\x80\x77\x37\x9c\xad\xc8\xa4\x2e\xbb\xec\xda\xb3\x5e\x7a\x19\x7f\x3d\x59\xc4\x16\x7b\x9c\x41\xaf\x49\xcf\xc3\xc1\xf7\x00\x00\x00\xff\xff\xee\x0a\x82\x66\xdf\x06\x00\x00")

func bigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_bigram_tracerJs,
		"bigram_tracer.js",
	)
}

func bigram_tracerJs() (*asset, error) {
	bytes, err := bigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x68, 0x65, 0x4b, 0x9b, 0x79, 0x34, 0x80, 0x29, 0x1d, 0xe9, 0xdf, 0xa3, 0xe6, 0x62, 0xab, 0x80, 0xb7, 0xf7, 0xe3, 0x8a, 0x8f, 0x54, 0xc4, 0x23, 0xf9, 0x23, 0x39, 0x7c, 0xd0, 0x2d, 0xe6, 0x91}}
	return a, nil
}

var _call_tracer_jsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\xdf\x4f\xdb\x4e\x12\x7f\x06\x89\xff\x61\x8e\x87\x26\x51\x53\x1b\x7a\x52\x1f\x68\x53\x29\x87\xa0\x8d\xc4\x01\x0a\xe1\x2a\x84\x78\xd8\xd8\x63\x7b\xdb\xcd\xae\xb5\xbb\x26\xf8\x5a\xfe\xf7\xaf\x66\x77\xed\x38\x6e\xa0\x15\x52\x90\x77\x66\x3e\xf3\xeb\x33\x3b\x1b\xc7\x70\xaa\xca\x5a\xf3\xbc\xb0\xf0\xfe\xe8\xfd\x31\x2c\x0a\x84\x5c\xbd\x43\x5b\xa0\xc6\x6a\x05\xd3\xca\x16\x4a\x9b\x83\xfd\x38\x86\x45\xc1\x0d\x64\x5c\x20\x70\x03\x25\xd3\x16\x54\x06\xb6\x67\x20\xf8\x52\x33\x5d\x47\x64\x11\xac\x76\x2a\x10\x46\xa6\x11\xc1\xa8\xcc\xae\x99\xc6\x13\xa8\x55\x05\x09\x93\xa0\x31\xe5\xc6\x6a\xbe\xac\x2c\x02\xb7\xc0\x64\x1a\x2b\x0d\x2b\x95\xf2\xac\x76\x98\xdc\x42\x25\x53\xd4\xce\xbb\x45\xbd\x32\x4d\x28\x5f\x2e\x6f\xe1\x02\x8d\x41\x0d\x5f\x50\xa2\x66\x02\xae\xab\xa5\xe0\x09\x5c\xf0\x04\xa5\x41\x60\x06\x4a\x3a\x31\x05\xa6\xb0\xf4\x78\x64\x79\x4e\xc1\xdc\x84\x60\xe0\x5c\x55\x32\x65\x96\x2b\x39\x06\xe4\x14\x3b\x3c\xa2\x36\x5c\x49\xf8\x77\xe3\x2b\x20\x8e\x41\x69\x87\x32\x64\x96\x72\xd0\xa0\x4a\x32\x1c\x01\x93\x35\x08\x66\x37\xb6\x7f\x55\x95\x4d\xf2\x29\x70\xe9\x3c\x15\xaa\x44\xb0\x05\xb3\x94\xf9\x9a\x0b\x01\x4b\x84\xca\x60\x56\x89\xb1\x83\x5b\x56\x16\xbe\xcd\x16\x5f\xaf\x6e\x17\x30\xbd\xbc\x83\x6f\xd3\xf9\x7c\x7a\xb9\xb8\xfb\x08\x6b\x6e\x0b\x55\x59\xc0\x47\xf4\x58\x7c\x55\x0a\x8e\x29\xac\x99\xd6\x4c\xda\x1a\x54\xe6\x20\xfe\x7b\x36\x3f\xfd\x3a\xbd\x5c\x4c\xff\x33\xbb\x98\x2d\xee\x40\x69\x38\x9f\x2d\x2e\xcf\x6e\x6e\xe0\xfc\x6a\x0e\x53\xb8\x9e\xce\x17\xb3\xd3\xdb\x8b\xe9\x1c\xae\x6f\xe7\xd7\x57\x37\x67\x11\xdc\x20\xc5\x85\x0e\xe0\xcf\xa5\xcf\x5c\x17\x35\x42\x8a\x96\x71\x61\x36\xe5\xb8\x53\x15\x98\x42\x55\x22\x85\x82\x3d\x22\x68\x4c\x90\x3f\x62\x0a\x0c\x12\x55\xd6\x7f\xdd\x5d\x07\xc6\x84\x92\xb9\x4b\xfc\x45\x76\xc2\x2c\x03\xa9\xec\x18\x0c\x22\x7c\x2a\xac\x2d\x4f\xe2\x78\xbd\x5e\x47\xb9\xac\x22\xa5\xf3\x58\x78\x3c\x13\x7f\x8e\x0e\xf6\xe9\x2f\x8e\x21\x61\x42\x9c\x6b\xb6\xc2\x85\x66\x09\x6a\x6a\x80\x71\x1e\x24\xae\x9d\x10\x32\x92\x82\xd5\x2c\xe1\x32\x87\x15\xda\x42\xa5\x06\xac\x02\x8d\xa5\xd2\x36\xb4\x0c\xb8\xcc\x94\x5e\x39\x76\xf9\x80\x97\xd4\x21\x2e\x2d\x6a\xc9\x04\xac\xd0\x18\x96\xa3\xe3\x34\x23\x34\x69\x58\x62\x3d\x7d\x7e\x1e\xec\xef\x91\x2b\x63\x59\xf2\xe3\x04\xee\x7f\x3e\x3f\x8c\x0f\xf6\xf7\x32\x56\x09\x7b\x02\x59\x25\x9d\xe2\x50\xa8\x7c\x0c\xe9\x72\x04\x3f\x9f\x49\xac\xd1\x6c\xcb\x13\xfb\x14\xe4\x07\xfb\x7b\x7b\x71\x0c\xd7\x1a\x4b\xe2\xbd\xaa\x88\xae\x21\x02\x17\x28\x29\x3c\x32\x0d\x1e\x03\x26\xde\x64\xcf\xd6\x25\x9e\x00\x00\x24\xf6\x29\xa2\x8f\xb1\x3b\xce\xb4\x5a\xb9\x63\xab\xbe\xe2\x13\xf9\x89\xe8\x68\xe4\xa5\x56\x39\x59\x57\x6a\x55\x90\x3d\x32\x51\x39\xc4\xc1\xd1\xd3\x00\xde\x3a\x5c\x77\x16\x59\x75\x63\x35\x97\xf9\xf0\xf8\x43\xd0\xcd\x99\xf1\x40\x41\x77\xc9\xf3\x99\xb4\x0e\x2f\x67\x66\xb4\xdb\xe2\xd6\x60\x7a\xb2\xdb\x82\x44\xbb\xac\xb8\x2c\x2b\x7b\xb2\x15\xaf\x3b\x0a\x62\x55\x59\x2f\xdf\x88\xfd\x91\x97\x3f\xd3\x0f\xcf\x60\x68\x0b\x6e\xa2\xb6\x6b\xf7\x47\x0f\xfe\x03\xfe\x35\x99\xb8\x7b\x2c\xe3\x12\xd3\xd0\x8b\xd0\xab\xa0\x31\x81\x17\x6c\xff\x80\x8f\x5a\x2b\xfd\x2a\xbe\xd7\xd8\x85\xef\x24\x0e\x1f\x50\x18\x04\xf2\x40\xa9\xfd\x3d\x66\xab\xbd\x15\xe5\x96\xd2\x16\x0c\xbc\x79\xb3\x43\x7c\x88\x4f\x98\x54\x44\x57\xd0\xf8\x88\xda\x62\x7a\x08\xbf\x7e\x05\x22\x86\x4a\xc3\x64\x32\x39\x3c\x7a\x3a\x1c\x35\xa1\xa4\x28\xd0\xe2\xb6\x52\x08\x83\xfe\x69\xb4\x95\x96\x3e\xeb\x8c\x4b\x26\xf8\xff\x31\xb8\x1e\x1d\xec\xef\xb9\x69\x41\x1a\xc4\xce\xb0\xb8\xa9\x0e\xf8\x34\x09\x6e\xd4\xb7\xe7\xc0\xa9\x44\x39\xda\x45\x5d\xe2\x70\xd4\x9d\x05\xcf\x8d\x56\xe1\x5c\xab\xd5\x70\xd4\x99\x87\x9e\x7c\xa1\x5a\x69\x60\x5f\x4f\x61\x46\xa7\xad\x8e\x9b\x84\x6d\x4e\xb7\x9a\x5f\x98\x19\x8e\x3a\xb4\x1e\x1c\x7f\x18\xf4\x98\xd9\xea\xfe\x8f\x26\x6d\x38\xea\xb5\xd7\xa7\x48\xf9\xfa\x51\x9c\xbc\xe0\x29\x58\x6f\x8f\x50\xeb\x68\x9b\x62\x51\x59\x99\x62\x48\x9f\x9b\x82\x3f\x71\xdb\xaf\xf7\xdc\xf7\x64\x53\x75\x81\xf2\x37\xba\x46\x02\x65\x6e\x8b\x26\x1b\x52\xf9\x0c\xc7\x0d\x15\x3a\xbd\xea\x87\xa0\xca\xe1\x68\x93\x5b\xb8\x01\x60\xb2\xab\x92\x3e\x90\x50\x4f\x52\xfb\xbd\xa6\xad\xb7\x66\x00\x7a\x86\x67\x74\x1c\x1c\x52\x9c\x41\x6d\xd7\x24\xf9\x80\x1a\x6e\x77\x7b\xbf\x81\xbb\x72\xd2\xe1\xc8\x03\x86\x29\xed\x9a\x37\x61\xb4\x33\xe8\xdd\x3a\x19\xf1\xd5\xb9\x1e\x9c\xce\xcf\xa6\x8b\xb3\x01\x8d\xd4\x4e\xc9\xfb\x41\x1b\x54\x33\x55\x5e\x4f\xf9\xc3\x67\xef\xde\xfd\x52\xe5\xdf\x4d\xe0\xb8\x4d\xb1\x77\xad\x08\x94\xef\x8e\x9b\x6b\x6f\x77\xe2\xaf\x5a\xc0\xfd\x43\xc7\xdb\x2b\xaa\xdb\xec\x72\xfa\x8e\x62\x71\x0c\xcd\xb8\xd3\xe3\x42\x23\xb3\x68\xe8\x75\x41\xfc\x50\xcb\xef\x98\xd0\x76\xa6\xad\x4d\x0b\xdd\xa9\x42\x8a\x86\x6b\x4c\x21\xe3\x28\x52\x50\xf4\xde\xa4\x17\xcc\x77\x43\x6b\x9b\x10\x0d\x6a\x4e\x90\x6e\x93\x47\xfe\x7d\xcc\x09\x55\xf2\x04\x6d\x0d\x19\x32\x5b\x69\xa4\x07\x40\xc9\x8c\x81\x15\x32\xc9\x65\x9e\x55\x42\xd4\xa0\x74\x8a\x84\xee\x2f\x1f\xe3\x11\xad\xa2\x37\x82\x36\xb0\x2e\x14\xa4\x4a\x0e\xc2\xb3\xa0\xd4\x48\x6f\xbf\x31\x7c\xaf\x8c\xa5\x17\x62\x29\x58\x0d\xdc\x46\xb4\xfb\x43\x5e\xdd\xf5\x4e\xf9\x6f\x46\xc7\x28\xba\x3c\x77\xac\xee\xa6\xed\xbd\xdd\xed\xce\xe9\xab\xb7\xb5\x43\xfb\x7b\xfb\x7a\x73\x3d\xf4\x96\x73\x33\x5b\xbd\x0d\xdc\x1d\xb9\xde\x9a\x75\x22\xf7\xd5\x5b\xb0\x9d\xa9\xf0\x12\x47\xed\xd6\xc4\x7d\x85\x60\xf9\xaa\x9b\x1c\x5f\x85\xa8\x1c\x3b\x5a\x03\xf7\xb5\xb9\x0a\xa9\xad\x43\xaa\xd4\x0f\xac\xe9\xcd\xed\x0b\xd6\x50\x93\xf8\xec\x4f\xee\x7f\x60\xfd\xf0\x02\x7f\xc3\x88\x74\x14\x37\x8c\x6d\xef\x5b\x2f\x7d\x6d\xfd\xb7\xa1\xf0\xc9\xd1\x47\xe0\x9f\xba\x16\xe1\xba\xfb\x08\xfc\xed\xdb\xd6\x6f\x57\xe1\x9e\x3f\x34\x97\x5d\xbb\xdc\x7a\xf2\x51\x2f\xaa\xb0\x10\xbd\x16\x4d\xcb\xc1\xfe\xf3\x3f\x01\x00\x00\xff\xff\x76\xb1\x88\xb4\x17\x0e\x00\x00")

func call_tracer_jsJsBytes() ([]byte, error) {
	return bindataRead(
		_call_tracer_jsJs,
		"call_tracer_js.js",
	)
}

func call_tracer_jsJs() (*asset, error) {
	bytes, err := call_tracer_jsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "call_tracer_js.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa3, 0xc0, 0x18, 0xb2, 0xa1, 0x8c, 0x21, 0xd9, 0xe2, 0xaa, 0xae, 0x6e, 0xcd, 0xf3, 0x30, 0xd0, 0xf3, 0xa8, 0x51, 0xa2, 0x9b, 0xfc, 0xda, 0xf7, 0x6e, 0xe, 0x8a, 0x2a, 0x5d, 0xe6, 0xd1, 0x2d}}
	return a, nil
}

var _call_tracer_legacyJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x51\x6f\x1b\xb7\xb2\x7e\x76\x80\xfc\x87\x89\x1f\x6a\x09\x51\x24\x39\xe9\xed\x05\xec\xaa\x17\xaa\xa3\xa4\x06\xdc\x38\xb0\x95\x06\x41\x90\x07\x6a\x77\x56\x62\x4d\x91\x5b\x92\x6b\x79\x6f\xeb\xff\x7e\x30\x43\xee\x6a\xb5\x92\x5c\x37\xa7\xc0\xe9\x79\xd3\x2e\x39\xc3\xe1\xf0\x9b\x6f\x66\xb8\x1a\x0c\xe0\xcc\xe4\xa5\x95\xf3\x85\x87\x97\xc3\xe3\xff\x85\xe9\x02\x61\x6e\x5e\xa0\x5f\xa0\xc5\x62\x09\xe3\xc2\x2f\x8c\x75\x4f\x9f\x0c\x06\x30\x5d\x48\x07\x99\x54\x08\xd2\x41\x2e\xac\x07\x93\x81\x6f\x09\x28\x39\xb3\xc2\x96\x7d\x92\x88\x52\x3b\x27\x90\x8e\xcc\x22\x82\x33\x99\x5f\x09\x8b\x27\x50\x9a\x02\x12\xa1\xc1\x62\x2a\x9d\xb7\x72\x56\x78\x04\xe9\x41\xe8\x74\x60\x2c\x2c\x4d\x2a\xb3\x92\x75\x4a\x0f\x85\x4e\xd1\xf2\xea\x1e\xed\xd2\x55\xa6\xbc\x7d\xf7\x01\x2e\xd0\x39\xb4\xf0\x16\x35\x5a\xa1\xe0\x7d\x31\x53\x32\x81\x0b\x99\xa0\x76\x08\xc2\x41\x4e\x6f\xdc\x02\x53\x98\x05\x7d\x24\xf9\x86\x8c\xb9\x8e\xc6\xc0\x1b\x53\xe8\x54\x78\x69\x74\x0f\x50\x92\xed\x70\x8b\xd6\x49\xa3\xe1\x55\xb5\x56\xd4\xd8\x03\x63\x59\x4b\x47\x78\xda\x83\x05\x93\x93\x60\x17\x84\x2e\x41\x09\xbf\x96\x7d\x94\x57\xd6\x9b\x4f\x41\x6a\x5e\x69\x61\x72\x04\xbf\x10\x9e\x76\xbe\x92\x4a\xc1\x0c\xa1\x70\x98\x15\xaa\xc7\xea\x66\x85\x87\x8f\xe7\xd3\x9f\x2e\x3f\x4c\x61\xfc\xee\x13\x7c\x1c\x5f\x5d\x8d\xdf\x4d\x3f\x9d\xc2\x4a\xfa\x85\x29\x3c\xe0\x2d\x06\x5d\x72\x99\x2b\x89\x29\xac\x84\xb5\x42\xfb\x12\x4c\xc6\x2a\x7e\x9e\x5c\x9d\xfd\x34\x7e\x37\x1d\xff\x78\x7e\x71\x3e\xfd\x04\xc6\xc2\x9b\xf3\xe9\xbb\xc9\xf5\x35\xbc\xb9\xbc\x82\x31\xbc\x1f\x5f\x4d\xcf\xcf\x3e\x5c\x8c\xaf\xe0\xfd\x87\xab\xf7\x97\xd7\x93\x3e\x5c\x23\xd9\x85\xac\xe0\xcf\x5d\x9f\xf1\x29\x5a\x84\x14\xbd\x90\xca\xad\xdd\xf1\xc9\x14\xe0\x16\xa6\x50\x29\x2c\xc4\x2d\x82\xc5\x04\xe5\x2d\xa6\x20\x20\x31\x79\xf9\xe8\xd3\x65\x65\x42\x19\x3d\xe7\x8d\xef\x45\x27\x9c\x67\xa0\x8d\xef\x81\x43\x84\xef\x17\xde\xe7\x27\x83\xc1\x6a\xb5\xea\xcf\x75\xd1\x37\x76\x3e\x50\x41\x9f\x1b\xfc\xd0\x7f\xfa\x84\xb5\x26\x42\xa9\xa9\x15\x09\x5a\x3a\x24\x01\x59\x41\xc7\xa0\xcc\x4a\x83\xb7\x42\x3b\x91\xd0\xa1\xd3\xef\x84\x81\x29\x3c\xe0\x1d\x3d\x79\x47\x08\x06\x8b\xb9\xb1\xf4\x5b\xa9\x1a\x73\x52\x7b\xb4\x5a\x28\x56\xee\x60\x29\x52\x84\x59\x09\xa2\xa9\xb1\xd7\xdc\x0f\x21\x2a\x9c\x3b\x48\x9d\x19\xbb\x64\x88\xf6\x9f\x3e\xf9\xfd\xe9\x93\x83\x68\xa4\xf3\x22\xb9\x21\x1b\x69\x85\xa4\xb0\x16\xb5\x27\x87\x16\xd6\xc9\x5b\xe4\x29\x10\xe6\x44\xaf\x4e\x7e\xf9\x19\xf0\x0e\x93\x22\xea\x3a\xa8\xb5\x9c\xc0\xe7\xdf\xef\xbf\xf4\xc8\x03\xa4\x3d\x45\x97\xa0\x4e\x31\xe5\x5d\xde\x38\x58\x2d\xd8\xb3\xb0\xc2\xa3\x5b\x84\x5f\x0b\xe7\x1b\x73\x32\x6b\x96\x20\x34\x98\x82\x22\xa0\xe9\x23\xa9\xbd\x09\x1a\x05\x3d\x68\xb4\x6c\x15\x2d\x5d\x8b\x9f\x40\x26\x94\xc3\x7a\x6d\xe7\x31\xa7\x4d\x49\x7d\x6b\x6e\x48\xbb\xb1\x84\x69\x5b\x82\xc9\x13\x93\xc6\xf0\xa0\xed\xd4\xbb\x41\x02\xd8\x01\x09\x9e\x40\x56\x68\x5e\xbb\xa3\xcc\xbc\x07\xe9\xac\x0b\xe4\x31\x52\x7c\x26\x72\x5f\x58\x64\xd7\xa2\xb5\xc6\x3a\x90\xcb\x25\xa6\x52\x78\x54\x25\x4d\xba\x15\x36\x8c\xc0\x08\x94\x99\xf7\xe7\xe8\x27\xf4\xd8\xe9\x9e\xd2\xb0\xcc\xa0\x13\x86\x9f\x8d\x46\xcc\x4b\x99\xd4\x98\xc6\x15\x0e\xfc\x42\xba\x7e\x26\x0a\xe5\xeb\xb5\x59\xec\xc0\xa2\x2f\xac\xe6\xdf\xf7\xd1\x96\x8f\x08\x46\xab\x12\x12\xa2\x20\x31\xa3\xb8\x75\xa5\xf3\xb8\x8c\x9b\x74\x3d\xc8\x84\x23\x77\xca\x0c\x56\x08\xb9\xc5\x17\xc9\x02\xe9\x28\x75\x82\x95\xad\xae\x74\x7c\xc8\x23\xa0\x15\xfb\x26\xef\x7b\xf3\xae\x58\xce\xd0\x76\xba\xf0\x0d\x0c\xef\xb2\x61\x17\x46\x23\xfe\x51\xef\x20\x0a\x55\x56\x93\x1e\x93\xc7\x0d\xb3\x86\x6b\x6f\xa5\x9e\xc7\x3d\x57\x06\x9f\x67\x20\x40\xe3\x0a\x12\xa3\x19\xeb\x74\x44\x33\x94\x7a\x0e\x89\x45\xe1\x31\xed\x81\x48\x53\xf0\x26\xa0\xb1\xc6\x5e\x6b\x59\xf8\xe6\x1b\xe8\xd0\x7a\x23\x38\x3a\xbb\x9a\x8c\xa7\x93\x23\xf8\xe3\x0f\x08\x6f\x0e\xc3\x9b\x97\x87\xdd\xa6\x75\x52\x5f\x66\x59\x34\x90\x55\xf6\x73\xc4\x9b\xce\x71\xb7\x7f\x2b\x54\x81\x97\x59\x34\x35\x4e\x9e\xe8\x14\x46\x51\xe8\x79\x5b\xe8\xe5\xa6\x10\x8b\x0d\x06\x30\x76\x0e\x97\x33\x85\xdb\xb1\x1a\xa3\x99\x03\xdb\x79\xa2\x34\xc2\x63\x62\x96\xb9\x42\x82\x59\xbd\x70\x3c\x88\x60\xf6\x81\x2f\x73\x3c\x01\x00\x30\x79\x2f\xbc\xa1\x20\xe1\x37\xde\xfc\x84\x77\x7c\x5e\x95\x2b\x09\x67\xe3\x34\xb5\xe8\x5c\xa7\xdb\x8d\xf3\xa5\xce\x0b\x7f\xb2\x31\x7f\x89\x4b\x63\xcb\xbe\x23\xca\xea\xf0\x06\x7b\x61\xbf\xb5\xd0\x5c\xb8\x73\x4d\x42\x11\xbd\x6f\x85\xeb\x34\xc6\xce\x8c\xf3\x27\xd5\x18\x3d\xd4\x83\xec\x14\x12\x3c\x1a\xde\x1d\x6d\xbb\x6d\xd8\x5d\xe3\xe2\xf8\xbb\x2e\xcb\xdc\x9f\xae\x51\x5f\xf3\x48\x3f\x2f\xdc\xa2\xc3\xf8\x6a\x0c\xaf\xa9\x62\x04\xde\x16\xb8\x2f\x2a\x18\x64\xdb\x00\x73\xa8\x32\xa2\x1b\x6f\x8b\x84\x81\x36\x17\x4c\x46\x4c\x04\x82\x28\xda\x15\x33\xf6\xbf\x37\x66\x07\xde\x22\xdc\xae\x27\x17\x6f\x5e\x4f\xae\xa7\x57\x1f\xce\xa6\x47\x4d\x80\x29\xcc\x3c\x59\xb6\xb9\x13\x85\x7a\xee\x17\x61\x17\xa4\x70\x73\xf8\x33\x09\xbd\x38\xfe\x12\xde\xc0\x68\x17\x21\x1c\x3c\x2c\x02\x9f\xbf\x04\xed\xf7\x3b\x1c\xb9\x39\x39\xb8\xf5\x6f\xc3\x96\x37\x3c\xbb\x9a\xef\x4d\x35\xe3\xe1\x63\xff\xfb\x61\x96\xce\x68\xca\x8f\x42\x09\x9d\xe0\x03\x76\xef\x40\xdf\x06\xb7\xee\x64\xaa\x25\xfa\x85\x49\x39\x8f\x24\x22\xa4\xa3\x0a\x51\xa9\xd1\xf8\x15\x7c\x35\xbe\xb8\x68\xb0\x15\x3f\x9f\x5d\xbe\x6e\x32\xd8\xd1\xeb\xc9\xc5\xe4\xed\x78\x3a\x69\xcf\xbd\x9e\x8e\xa7\xe7\x67\xfc\xb6\x26\xb7\xc1\x00\xae\x6f\x64\xce\x09\x89\x09\xde\x2c\x73\x2e\xba\x6b\x8b\x5d\x0f\xfc\xc2\x50\x2d\x6b\x63\xd6\xcd\x84\x4e\xaa\x4c\xe8\x6a\x04\x7b\x43\xf8\xdd\x77\x8c\xc7\xad\x63\x5c\x63\x5a\xba\xf7\x16\xe3\xb2\x69\xc7\x9b\xda\xb4\x86\x5f\x23\x3c\x39\x4f\x30\x0f\x77\x1e\xbf\x55\xf8\x3f\x18\xc2\x09\x1c\xd7\x5c\xfb\x00\x9f\xbf\x84\xe7\xb4\xc0\xd7\xb0\xfa\xab\x5d\xa2\xff\x60\x6e\xdf\x8a\xbf\xff\x0c\xe9\x9b\xc2\x5f\x66\xd9\x09\xb4\xdd\xf9\xed\x96\x3b\xd7\x02\x17\xa8\xb7\x05\xfe\x67\x4b\xa0\x99\x21\x08\x68\x26\x87\x67\x5b\x90\x09\xd4\xfc\xac\x15\x1d\x95\x9b\xb9\x50\x64\x85\x30\xda\x93\x96\x5e\x6e\x02\x7b\x3f\x9b\xfe\xdb\x69\x69\x67\xdd\x4b\xd5\xed\x66\x61\xdb\x03\x8b\xde\x4a\xbc\xa5\x76\xf6\xc8\xb1\x56\xea\x03\xcc\x8a\x08\xae\x0f\x1f\x31\xaa\xd4\x88\xcc\x3d\xb1\x71\xa0\x2a\x8f\xab\x68\xaa\xfd\x63\x2b\xc8\xa0\x13\x5c\xdc\x5b\x84\xa5\x28\xa9\x15\xcc\x0a\x7d\x53\xc2\x5c\x38\x48\x4b\x2d\x96\x32\x71\x51\x21\x37\x0d\x16\xe7\xc2\xb2\x5e\x8b\xbf\x15\xe8\xa8\xb1\x24\x70\x8b\xc4\x17\x42\xa9\x12\xe6\x92\x9a\x43\x12\xef\xbc\x7c\x35\x1c\x82\xf3\x32\x47\x9d\xf6\xe0\xbb\x57\x83\xef\xbe\x05\x5b\x28\xec\xf6\x2b\x06\xdc\xf4\x51\x75\x2e\x34\x12\xc1\xf4\x1a\x73\xbf\xe8\x74\xe1\x87\x3d\xb9\x73\x5f\x1e\xdc\x39\x19\x5e\xc0\xf1\x97\x3e\x99\x36\xda\x00\x72\x3c\x54\x40\xe5\xb0\xd2\x47\x6d\xf5\xe5\xeb\xcb\xce\x8d\xb0\x42\x89\x19\x76\x4f\xb8\xcd\x66\x8f\xad\x44\x6c\xaf\xe8\x6c\x20\x57\x42\x6a\x10\x49\x62\x0a\xed\xc9\xff\x55\x9f\xa4\x4a\x4a\x02\x47\xbe\x56\xc8\xdd\xa8\x48\x12\x74\xae\x4a\x0a\x7c\x7a\x64\x91\x58\x92\x38\x48\xed\x64\x8a\x8d\xc3\x21\xde\x30\x4c\xdf\x71\x06\x75\xec\xb5\xc6\xa5\x71\xb4\xcc\x0c\x61\x65\xa9\xaf\x73\x52\x27\x7c\xcd\x91\x22\x39\xdd\x81\xd1\x20\x40\x19\xbe\x5d\xe1\xc8\x07\x61\xe7\xae\x1f\x92\x02\xad\x4b\x74\xa4\xcd\xaa\xdf\xc6\x75\x13\xb8\xdc\x3c\x6d\x55\x51\x1a\xf0\x4e\x3a\xcf\xe5\x39\x99\x2a\x1d\x04\x60\x4b\x3d\xef\x41\x6e\x72\xe6\xf2\x3f\xcd\x7c\x91\xd1\xaf\x26\xbf\x4c\xae\xd6\x35\xd3\xe3\x8f\xb3\x6a\xa6\x0e\xeb\xae\x13\x2c\xf5\x72\x1e\xd3\xc3\xdd\xbd\xd1\x0e\x78\x8d\xf6\xc0\x8b\x96\x68\xa4\xd2\xf7\x8d\x4d\x29\xe1\xfc\xfa\x8c\xe6\x18\xfa\xc5\xa6\x11\xae\x50\xde\xb5\x09\xbe\x4d\x1a\x26\x5f\x67\x12\x32\x8c\x29\x89\xe8\xbf\xdd\xbe\x6c\x0c\xac\xbb\x98\x06\x5e\xcf\x1b\xde\x5e\x71\xcd\x1a\x66\x35\x18\x83\xc7\xab\xe2\x57\x84\x9c\xc1\xf6\x9b\xc2\x13\x38\x28\xe5\x37\xa8\x71\x2e\xdc\x07\xc7\x10\x88\xe4\x38\x93\xf3\x73\xed\x3b\xd5\xe0\xb9\x86\x17\x50\x3d\x10\xef\xc3\x8b\x8d\xc0\xda\xc5\x9d\x07\x29\x2a\xf4\x08\x6b\x1d\xa7\xd0\x7a\x45\x9a\x2a\x9f\xb0\xef\x2c\xfa\xed\x64\x3e\xac\x14\x92\xdb\x9e\x59\xf4\x7d\xfc\xad\x10\xca\x75\x86\xeb\x12\x23\x6c\xc3\x1b\xce\x84\xa3\xad\x5a\x94\x84\x36\xab\xcf\xd3\xa6\x5c\x74\x4a\x25\x17\x2a\xc9\x33\x93\xe2\x83\x2a\x2a\x1d\x91\x4f\xea\x43\x8d\x40\xdd\x59\xc5\x1f\x34\x67\xc0\x61\x5d\x42\x64\x42\xaa\xc2\xe2\xe1\x29\xec\xe0\x23\x57\xd8\x4c\x24\x7c\xa8\x0e\x81\x6f\x05\x1c\x38\xb3\xc4\x85\x59\x45\x13\x76\x13\xdb\x36\x50\x6a\x4c\xb4\x32\x0c\x5f\x79\x09\x07\x85\x13\x73\x6c\x00\x65\xed\xf8\xea\xcc\x76\xdf\x57\x7c\x35\x8e\x9e\xd7\x8f\x8f\x81\xd4\xfd\xdf\x06\x95\xd6\x91\x6f\x55\x47\xd5\x24\xae\x91\x1a\x0f\x95\xc1\xa1\x7c\xf9\xe7\x61\xe0\xf1\x51\xd7\x9e\x1c\xf6\xb7\x39\x3b\xec\xb2\x59\x0b\x3d\x02\x0a\xf5\xf0\x3e\x14\xec\xaf\xb4\x08\xb3\xfa\x57\x4c\xfc\x1a\xb7\x5c\x18\xd1\x53\x6e\xf1\x56\x9a\x82\x52\x1d\xfe\xd7\xb5\xdb\xeb\x72\x91\x24\xee\xeb\x0b\x4a\x3e\xc8\xe6\x0d\xe5\x6a\x11\x6f\xdc\x43\x9d\xd5\xc8\x33\x86\x53\x71\xbc\xb7\xcc\xe2\x4d\xf8\x01\x2b\x78\xe8\xa6\x32\x72\x80\x37\x39\xd5\x10\x31\x91\x29\x8b\x22\x2d\xeb\xfc\xd9\x0b\xf5\x0b\x2c\x84\x4e\x63\x73\x23\xd2\x54\x92\x42\xc6\x25\xd9\x28\xe6\x42\xea\x8d\x72\xee\x2f\x64\xed\x9d\x40\xd9\x51\x1d\x37\xf3\x6e\x6c\x51\xa9\x9b\x64\xab\xab\x8b\xca\x87\xf3\x6b\x2b\xba\xb6\x6e\x5e\xe3\x42\x67\x46\xbb\x62\xc9\xf5\x34\x88\x5b\x21\x95\xa0\xae\x8e\xeb\x33\x9d\x42\xa2\x50\xe8\xf0\x21\x06\x33\x6f\x6e\xd1\xba\x6a\xe7\x0f\x63\xff\xab\xa0\xdf\x62\xce\xea\xb1\xf6\xcb\x5f\x88\xe8\x47\xc7\x73\x74\xc3\x1b\x25\xbc\x8f\x80\x6b\xb8\x3a\x04\x9d\xf4\xfc\xc1\x0e\xb5\xaf\x5c\xff\xa7\xd1\xc6\x15\x17\x4d\xfa\x01\x86\xcd\x22\xff\x9f\x14\x80\xbb\x70\x77\x51\xd7\x78\xd1\x0b\xde\x98\x1e\x28\x14\xdc\x7c\x55\x1f\xd4\xea\xca\xf6\xc1\x86\x70\x1d\xdc\xa1\x32\xdc\x8a\x6e\xbe\x5c\x5c\x60\x75\xf1\x12\xba\x85\x19\xa2\x06\xe9\xd1\x0a\x6a\xb4\x08\x72\xf1\xfb\x0f\xd9\xea\x82\x3e\x3e\x25\x49\x21\x19\x35\xc7\x4f\x31\x94\xd1\xa5\x9e\x13\x1d\x84\x81\x06\x1f\x24\xfe\xae\xc1\x07\x21\x71\xb2\x6c\x75\x05\x51\xdf\x40\x24\xfe\x8e\xcb\xce\xd0\x9f\xb7\xae\x21\x68\x90\x5e\xc5\xee\xbd\x75\xe9\xc0\xa2\xd5\xc5\x43\xfb\x5e\x8e\x06\xf9\xdd\x06\xf4\xc3\xdc\xb9\x70\x41\x51\x2b\x5a\xfc\xdd\x76\xb0\xd4\x12\x14\x27\x27\xbb\x25\x68\x68\x97\x54\xeb\x2e\x84\x66\xf3\xab\x38\x1c\x8a\x81\x93\xe6\x70\x78\x55\x6d\x57\x2e\x1b\x3e\x92\xcb\xe0\xa3\xfb\xd3\x3d\x74\x38\xac\x60\xba\x87\xf6\xc8\xff\x35\x90\xf7\xc8\x6e\x76\x31\xdb\x93\x1e\xe4\x55\x5e\xa0\xa2\xc0\x3d\xb2\x61\x81\x46\xd9\xe2\xef\xfe\x82\xd2\x7a\xf6\xa6\x9d\x1b\xb3\x36\xf4\xf0\xdd\xe7\xd6\xf0\xae\x5e\x8e\x7a\xa0\x38\xb1\x2a\xd2\x46\xa3\xc3\xe1\xdd\xfa\x43\x4e\x64\xb4\x8d\x49\x6b\x3b\x42\xc8\x84\x6d\x73\xb4\xc8\xff\xc7\xb8\x72\x2b\x3e\xab\x51\xb0\x18\xbe\x3b\x71\x85\x4c\xe1\x69\x66\x5c\x84\x14\x8e\x9a\xde\x75\xd8\xa5\xe8\xa4\xc5\x14\x32\x89\x2a\x05\x93\xa2\xe5\xb6\xfa\x57\xc7\xf7\x7b\x83\x01\x38\xb4\x92\x54\x86\x0f\xac\xe1\xbf\x0f\xfc\xdd\x57\xcb\x04\x7d\x09\x19\x0a\xfe\x6c\xe8\x0d\xe4\xc2\x39\x58\xa2\xa0\x2e\x3a\x2b\x94\x2a\xc1\xd8\x14\x49\xfb\xba\xa1\xa4\x98\x37\x50\x38\xb4\x0e\x56\x0b\x13\xb3\x34\x17\x8c\x39\xd5\xbf\xd2\xf7\xe2\x3d\x92\x74\xb9\x12\x25\x48\xcf\x35\x41\xdc\x57\x93\x06\xd6\x5f\xe9\xf8\x63\x9f\x21\x57\xef\xe0\x80\xaa\xf7\x6c\x91\x00\xbf\xa7\xa7\x56\xf8\xc7\xae\xab\x15\xf8\xeb\xdb\xb6\x56\x94\x57\xf9\xaa\x15\xca\xcd\x04\xd8\x8a\x57\x1e\xe2\xa7\x56\xa4\x36\x8a\xf8\x30\xc2\xa0\xaa\x45\xf8\xa9\x1d\xbc\x6c\x6c\x15\xbd\xe1\x7b\x75\x2d\xc0\x4f\xbd\x1a\x44\x74\xac\x1d\xf2\xd4\x0d\x96\x44\xff\xc1\x61\xcd\x94\x16\xde\x7c\xbe\xc1\xf2\xcb\x9e\x0c\x16\x61\xda\x98\xd8\x48\x59\x75\xc8\x84\xe1\x87\x08\xa3\xb6\x45\x8e\x86\xa7\x20\xbf\x6f\x4a\x54\xc9\x17\xe4\xf3\xe7\xf5\xc2\xcd\x09\x9f\xe5\x97\x8a\x03\xea\x60\x68\x8d\x77\xdb\x66\xc5\x08\x0a\xd3\x38\x64\x9e\x3e\xb9\x7f\xfa\xe4\x5f\x01\x00\x00\xff\xff\x24\x3b\xd5\xa4\xf8\x23\x00\x00")

func call_tracer_legacyJsBytes() ([]byte, error) {
	return bindataRead(
		_call_tracer_legacyJs,
		"call_tracer_legacy.js",
	)
}

func call_tracer_legacyJs() (*asset, error) {
	bytes, err := call_tracer_legacyJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "call_tracer_legacy.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x21, 0x59, 0x34, 0xce, 0x2d, 0x92, 0x8b, 0x13, 0x81, 0xd8, 0x3e, 0xae, 0xdf, 0x8c, 0x8d, 0x4f, 0x7b, 0xa4, 0x4a, 0x4c, 0xe, 0x66, 0x21, 0xa9, 0x74, 0x20, 0xf3, 0x57, 0xc4, 0xc3, 0xa6, 0x1d}}
	return a, nil
}

var _evmdis_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x97\xdf\x6f\x1a\xbb\x12\xc7\x9f\x89\x94\xff\x61\x94\x27\x50\x29\xb0\xcb\x42\x60\x73\x72\x24\x6e\x4a\x7a\x72\x95\x26\x11\x90\x73\x54\xa1\x3c\x18\x98\x05\xab\xcb\x7a\x65\x7b\x49\xb9\x55\xfe\xf7\xab\xf1\x78\x81\xfc\x52\x5b\xe9\xde\x4a\x5d\x77\xd7\x33\x9f\xf9\x7a\x66\x6c\xd3\x66\x13\x2e\x54\xbe\xd5\x72\xb9\xb2\x10\xb6\x82\x53\x98\xac\x10\x96\xea\x23\xda\x15\x6a\x2c\xd6\x30\x28\xec\x4a\x69\x73\x7c\xd4\x6c\xc2\x64\x25\x0d\x24\x32\x45\x90\x06\x72\xa1\x2d\xa8\x04\xec\x0b\x87\x54\xce\xb4\xd0\xdb\x06\x79\x78\xaf\x37\x0d\x88\x91\x68\x44\x30\x2a\xb1\x8f\x42\x63\x0c\x5b\x55\xc0\x5c\x64\xa0\x71\x21\x8d\xd5\x72\x56\x58\x04\x69\x41\x64\x8b\xa6\xd2\xb0\x56\x0b\x99\x6c\x1d\x53\x5a\x28\xb2\x05\x6a\x17\xdd\xa2\x5e\x9b\x52\xca\xe7\x9b\x7b\xb8\x46\x63\x50\xc3\x67\xcc\x50\x8b\x14\xee\x8a\x59\x2a\xe7\x70\x2d\xe7\x98\x19\x04\x61\x20\xa7\x2f\x66\x85\x0b\x98\x31\x8f\x3c\x2f\x49\xcc\xd8\x8b\x81\x4b\x55\x64\x0b\x61\xa5\xca\xea\x80\x92\xb4\xc3\x06\xb5\x91\x2a\x83\x76\x19\xcb\x13\xeb\xa0\xb4\xa3\x54\x85\xa5\x35\x68\x50\x39\x39\xd6\x40\x64\x5b\x48\x85\xdd\xfb\xfe\x52\x56\xf6\x8b\x5f\x80\xcc\x5c\xa4\x95\xca\x11\xec\x4a\x58\x5a\xf9\xa3\x4c\x53\x98\x21\x14\x06\x93\x22\xad\x3b\xdc\xac\xb0\xf0\xcf\xd5\xe4\xaf\xdb\xfb\x09\x0c\x6e\xbe\xc2\x3f\x83\xd1\x68\x70\x33\xf9\x7a\x06\x8f\xd2\xae\x54\x61\x01\x37\xc8\x2c\xb9\xce\x53\x89\x0b\x78\x14\x5a\x8b\xcc\x6e\x41\x25\x0e\xf1\x65\x38\xba\xf8\x6b\x70\x33\x19\xfc\xeb\xea\xfa\x6a\xf2\x15\x94\x86\xcb\xab\xc9\xcd\x70\x3c\x86\xcb\xdb\x11\x0c\xe0\x6e\x30\x9a\x5c\x5d\xdc\x5f\x0f\x46\x70\x77\x3f\xba\xbb\x1d\x0f\x1b\x30\x46\xd2\x85\x0e\xf0\xf3\xd4\x27\xae\x8a\x1a\x61\x81\x56\xc8\xd4\xec\xd3\xf1\x55\x15\x60\x56\xaa\x48\x17\xb0\x12\x1b\x04\x8d\x73\x94\x1b\x5c\x80\x80\xb9\xca\xb7\xbf\x5c\x5d\x07\x13\xa9\xca\x96\x6e\xe1\xef\x76\x27\x5c\x25\x90\x29\x5b\x07\x83\x08\x7f\xac\xac\xcd\xe3\x66\xf3\xf1\xf1\xb1\xb1\xcc\x8a\x86\xd2\xcb\x66\xca\x3c\xd3\xfc\xb3\x71\x7c\xe4\xa8\xb8\x59\x2f\xa4\x99\x68\x31\x47\x0d\x1a\x6d\xa1\x33\x03\xa6\x48\x12\x39\x97\x98\x59\x90\x59\xa2\xf4\xda\xb5\x0c\x24\x5a\xad\x41\x80\x25\x63\xb0\x0a\x72\xd4\x34\xe9\x19\x1f\x8d\xdd\xa6\x2c\x75\x21\x8d\x30\x06\xd7\xb3\x94\x76\xcc\x8f\xe3\xa3\x8a\xb1\x62\xfe\x2d\x86\xe9\x0f\x95\x9b\x18\xa6\x0f\x4f\x0f\x75\x12\x50\xc9\xf2\xc2\xac\xd0\xc4\xf0\xa3\x15\x43\xab\x0e\x41\x0c\x41\x1d\x42\xf7\x6c\xbb\x67\xe4\x9e\x1d\xf7\xec\xba\xe7\xa9\x7b\xf6\xdc\xb3\xef\x9e\x41\x8b\x07\xf6\x0e\xd8\x2c\x60\xbb\x80\x0d\x03\xb6\x0c\xd9\x32\xf4\x71\x38\x50\xc8\x91\x42\x0e\x15\x72\xac\x90\x29\x6d\x36\x89\x98\x12\x31\xa5\xc3\x94\x0e\x53\x3a\x6c\xd2\x61\x4a\xc7\x0b\xee\xb8\xf5\x74\x98\xd2\x39\xe5\x37\xa6\x74\x98\xd2\xe5\x25\x77\xd9\xa1\xeb\x97\xc8\x0e\x5d\x16\xdf\x65\x87\x2e\x3b\xf4\xd8\xa1\xc7\x61\x7b\x21\xbf\xb5\x79\x60\x4a\x8f\xc3\xf6\xba\x3c\x70\xd8\x1e\x53\x7a\x4c\xe9\xb3\xf8\x7e\xe0\xe6\xfa\x1c\xaf\xcf\xf1\xfa\x3e\xab\x65\x5a\x7d\x5e\x5b\x3e\xb1\xad\xd0\x8f\x6d\x3f\x46\x7e\xec\xf8\xd1\x67\xbe\xe5\x53\xdf\xf2\xb9\x6f\x79\xde\xae\x4e\x9e\x17\x78\x5e\xe0\x79\x81\xe7\x05\x9e\x57\x56\xb2\x2c\x65\x59\x4b\x5f\xcc\xc0\x57\x33\xf0\xe5\x0c\x7c\x3d\x03\x5f\xd0\xc0\x57\x34\xf0\x25\x0d\x7c\x4d\x83\xd0\xf3\xc2\x5e\x0c\x21\x8d\xfd\x18\xda\x75\x08\xda\xad\x18\x22\x1a\x83\x18\x3a\x34\x86\x31\x74\x69\x6c\xc7\x70\x4a\x63\x14\x43\x8f\xc6\x4e\x0c\x7d\x1a\x89\x47\x5d\xdb\x26\x20\x11\xdb\xa4\x90\x90\x6d\x92\x48\xcc\x88\x34\x12\x34\x22\x91\x44\x8d\x48\x25\x61\x23\x92\x49\xdc\x28\x62\x1d\x51\x87\x75\x44\x5d\xd6\x11\x9d\xb2\x0e\xea\x3e\xe7\xd0\x67\x1d\xd4\x7f\xa4\x83\x1a\x90\x74\xb8\x0e\x24\x1d\xae\x07\x49\x87\xeb\x42\x42\x52\x1f\x3a\x1d\xae\x13\x09\x4a\xbd\xe8\x74\xb8\x6e\x24\xac\xeb\x47\xe2\xfa\x8e\x0c\xba\x81\x1f\x43\x3f\xb6\xfd\x18\xb9\x31\x8c\xfc\x2e\x8a\xfc\x36\x8a\xfc\x3e\x8a\xda\x7e\xde\xdb\xb9\x4d\xf0\xc4\x3b\xbd\xd9\x04\x8d\xa6\x48\x2d\x5d\x06\x32\xdb\xa8\x6f\x74\x5a\xaf\x30\x03\x91\xa6\xee\x44\x53\xf9\x5c\x2d\xd0\xf0\x51\x39\x43\xcc\x40\x5a\xd4\x82\x2e\x0c\xb5\x41\x4d\x17\x66\x79\x42\x31\x8f\x9c\x12\x99\x89\xb4\x24\xfb\xf3\x94\x0e\x28\x99\x2d\x1b\xc7\x47\x15\x9e\x88\x21\x29\xb2\x39\x9d\x61\xd5\x1a\xfc\xf0\x10\xb0\x2b\x69\x1a\xee\x60\x9a\xb6\x1e\x1a\x2a\x37\x67\xb0\xd7\x9a\x88\xb7\xa4\x12\x5d\xcc\x6d\x21\x52\xc0\xef\x38\x2f\xdc\xb1\xa8\x12\x10\x99\x57\x0f\x89\xbf\x01\x2a\x0e\x70\x10\x38\x55\xcb\x3a\x2c\x66\x14\x7f\x1f\xc5\x58\xcc\x0f\x83\xd0\x55\x82\x1b\xd4\xdb\x12\xe7\x6e\x47\x8a\xfa\xf7\x17\x1f\x11\x1d\x9d\x1c\xdf\x84\x1f\x1f\x55\x2a\x1b\xa1\x21\xd1\x62\x8d\x70\x7e\xb8\xc8\xfd\x3f\x1b\x29\x66\x4b\xbb\x82\x8f\x10\x3c\x9c\x39\x2d\xce\x07\xb5\x56\x1a\xce\x21\x55\xcb\xc6\x12\xed\x90\x5e\xab\xb5\x33\x9a\x96\x09\x54\xdd\xb4\x0f\x51\x71\xfc\xe9\x89\xfb\x76\xf2\x00\xe7\xec\xec\x6c\x9f\x00\x53\x83\x40\x2e\x9e\xf4\x09\x73\xbb\xaa\xd6\xe0\xfc\x50\x8f\x17\x51\x02\x55\x4e\x57\x0d\x9c\xfb\xd7\x8a\xca\x63\xa0\x3f\x84\x50\x79\xc3\xaa\x9b\x62\x3d\x43\x5d\xad\xd5\x79\x7e\x41\x4c\x88\xe1\x79\x08\x3f\x59\x96\x7d\xfa\xc0\x1f\x9e\x9c\x30\xb7\x0a\x27\x9c\xaa\x5d\x26\xe1\x4f\x68\x95\x1a\x5c\x16\x72\x8d\x1b\x95\xc3\x39\xec\x2c\xa7\xaf\x7c\x7c\xe2\xc8\x25\x51\xba\x4a\x6e\x12\xce\xa1\x75\x06\x12\xfe\xe0\x35\xfa\x9b\x6d\xca\xb8\x86\xca\x1f\xce\x40\x7e\xf8\x50\x63\xaf\x8a\xff\xcc\x42\x1b\x64\xeb\x92\xc5\x99\xc9\x11\xbf\x55\x65\xad\x61\xd5\xd8\x6a\x99\x2d\xab\x41\xb7\xc6\x75\xa8\x3c\xb9\xa7\x79\x94\x76\xce\x1e\x2e\x37\xde\xac\x56\x2e\x64\x2e\x0c\xc2\xc9\xc5\xe0\xfa\xfa\x24\x86\xfd\xcb\xc5\xed\xa7\xe1\x49\xbc\x5f\xaa\xcc\x8c\xa5\x1f\xbc\x5c\xf2\x83\xd8\xed\x5a\x63\x23\xd2\x02\x6f\x13\x5f\xff\x9d\xbd\xfc\x0f\xbe\x36\x8f\x5e\x9b\x73\x39\xa7\x27\x4b\x61\x5c\x7b\xbc\xf0\x68\xbd\xef\x61\xd5\x5b\x0e\xc1\xf3\x6c\xbc\xf0\x71\xac\xb7\xdc\xc2\x03\xb7\x97\x4e\x32\xcb\x0b\xbb\x73\x5a\xe3\x5a\xe9\x6d\xc3\xd0\x4f\xa4\xaa\x4f\x4c\x7d\x97\xa1\x0f\x7e\xed\x2f\x19\xfb\xfe\xcf\x8a\x34\x7d\x31\xc9\xe7\xcc\x7b\xb3\x2a\xe7\xcc\x4c\xcb\x4e\x3a\xd8\x1a\xae\x1f\xd8\xb0\x8c\x38\xd3\x28\xbe\x9d\x1d\x54\xf7\xd3\xf0\x7a\xf8\x79\x30\x19\x3e\xab\xf2\x78\x32\x98\x5c\x5d\xf0\xa7\x5f\xa8\x73\xf8\x7b\x75\x7e\xa3\x2d\xf6\xab\x71\x8b\x81\x57\x2d\xf9\x4e\x3f\xfc\x7e\x43\xfc\x5e\x47\xec\x8b\xfb\x3f\xa9\xee\x4f\xca\xfb\xff\xa8\xef\x68\x38\xb9\x1f\xdd\xec\x2a\x3b\x1a\xfe\x3d\x1c\x4d\x0e\xab\x4a\xff\xff\xf9\x95\x8d\xe5\x6d\xdf\x2e\x69\xf0\xda\x9e\x4f\x3b\x7f\x49\xbe\xb1\x39\x54\x61\xeb\x2e\xf8\x87\x12\xfb\xee\x1a\xc6\x93\xdb\xbb\x7d\x6f\x0e\xaf\x2f\x3f\x0d\xc7\x93\xd1\xfd\xc5\x6e\x1d\x3f\x8b\xd5\xaa\x43\xeb\x5d\xfa\xbf\xef\xbf\xdc\x11\xb0\x84\x95\x99\xcf\xe7\xbb\x5d\xbd\x44\x7b\x77\x51\x7d\x76\x76\xca\xa4\x3c\x37\xa5\xb9\xa3\x3a\xec\x4e\xcd\x1d\x20\xc5\x6c\x47\x78\x76\xf7\xc0\x47\x68\x7d\xef\xe0\x21\x6e\x7f\x37\xbc\x2a\xaa\xbf\x08\x19\xbe\xaf\xfe\xb3\x5b\x79\xbf\xce\xe7\x17\x99\x27\x1c\x1f\xd1\xdf\xa7\xe3\xa3\xff\x06\x00\x00\xff\xff\x16\x60\x14\xa2\xd4\x10\x00\x00")

func evmdis_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_evmdis_tracerJs,
		"evmdis_tracer.js",
	)
}

func evmdis_tracerJs() (*asset, error) {
	bytes, err := evmdis_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "evmdis_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2a, 0xed, 0xa3, 0x58, 0x23, 0xaa, 0x52, 0x96, 0x36, 0x47, 0xfc, 0x49, 0x9e, 0xe, 0x89, 0x5d, 0x55, 0x8c, 0xca, 0xf1, 0xa3, 0x49, 0x4c, 0xb3, 0xfc, 0x9f, 0x4c, 0xf2, 0xd3, 0x16, 0x1, 0x92}}
	return a, nil
}

var _noop_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4f\x6f\xdb\x46\x10\xc5\xcf\x16\xa0\xef\xf0\x8e\x09\xa0\x8a\xfd\x73\x28\xe0\x14\x05\x58\xc3\x4e\x54\x38\xb2\x21\xd1\x0d\x7c\x5c\x92\x43\x71\xd3\xd5\x0e\x3b\x3b\x2b\x85\x30\xfc\xdd\x8b\x5d\x4a\x70\x50\xa4\x88\x6f\x82\xa4\xf7\x7b\x6f\x66\x1e\x59\x14\xb8\xe2\x61\x14\xbb\xeb\x15\x3f\xff\xf8\xd3\xaf\xa8\x7a\xc2\x8e\x7f\x20\xed\x49\x28\xee\x51\x46\xed\x59\xc2\x7c\x56\x14\xa8\x7a\x1b\xd0\x59\x47\xb0\x01\x83\x11\x05\x77\xd0\xff\x08\x9c\xad\xc5\xc8\xb8\x4c\x8a\x93\xea\x9b\x7f\x48\x8c\x4e\x88\x10\xb8\xd3\xa3\x11\xba\xc4\xc8\x11\x8d\xf1\x10\x6a\x6d\x50\xb1\x75\x54\x82\x55\x18\xdf\x16\x2c\xd8\x73\x6b\xbb\x31\x33\xad\x22\xfa\x96\x24\xbb\x2b\xc9\x3e\x9c\xa3\xbc\x5f\x3f\xe0\x96\x42\x20\xc1\x7b\xf2\x24\xc6\xe1\x3e\xd6\xce\x36\xb8\xb5\x0d\xf9\x40\x30\x01\x43\xfa\x26\xf4\xd4\xa2\x9e\x78\x49\x79\x93\xc2\x6c\x4f\x61\x70\xc3\xd1\xb7\x46\x2d\xfb\x05\xc8\xa6\xec\x38\x90\x04\xcb\x1e\xbf\x9c\xbd\x4e\xc4\x05\x58\x32\xe5\x8d\xd1\x34\x83\x80\x87\x24\x7c\x0b\xe3\x47\x38\xa3\x2f\xda\x57\x6d\xe5\x65\xf8\x16\xd6\x67\xa7\x9e\x07\x82\xf6\x46\xd3\xe4\x47\xeb\x1c\x6a\x42\x0c\xd4\x45\xb7\xc8\xb8\x3a\x2a\x3e\xad\xaa\x0f\x77\x0f\x15\xca\xf5\x23\x3e\x95\x9b\x4d\xb9\xae\x1e\xdf\xe1\x68\xb5\xe7\xa8\xa0\x03\x4d\x2c\xbb\x1f\x9c\xa5\x16\x47\x23\x62\xbc\x8e\xe0\x2e\x23\x3e\x5e\x6f\xae\x3e\x94\xeb\xaa\xfc\x63\x75\xbb\xaa\x1e\xc1\x82\x9b\x55\xb5\xbe\xde\x6e\x71\x73\xb7\x41\x89\xfb\x72\x53\xad\xae\x1e\x6e\xcb\x0d\xee\x1f\x36\xf7\x77\xdb\xeb\x25\xb6\x94\x72\x51\x06\x7c\x7f\xf5\x5d\xbe\xa2\x10\x5a\x52\x63\x5d\x78\x59\xc7\x23\x47\x84\x9e\xa3\x6b\xd1\x9b\x03\x41\xa8\x21\x7b\xa0\x16\x06\x0d\x0f\xe3\xab\xaf\x9b\x61\xc6\xb1\xdf\xe5\xc1\xff\xb7\x9d\x58\x75\xf0\xac\x0b\x04\x22\xfc\xd6\xab\x0e\x97\x45\x71\x3c\x1e\x97\x3b\x1f\x97\x2c\xbb\xc2\x4d\xbc\x50\xfc\xbe\x9c\xcf\x32\xd5\x33\x0f\x95\x98\x86\x24\x1d\xe9\x73\x0c\x9a\xe9\xb5\x11\xaa\xd9\x13\x6a\xb6\x8e\x64\x48\xf7\x46\xc3\x6d\x9a\xe1\x9f\x68\x85\x5a\x74\xc2\x7b\x18\xfc\x69\x0e\x66\xdb\x88\x1d\x34\xf3\xb8\xfe\x4c\x8d\x42\x79\xba\xa5\xa9\x5d\xee\xa6\x81\x8a\xf1\xc1\x34\xa9\x42\xe9\x73\x43\xb2\x9c\xcf\x9e\xe6\xb3\x8b\xa2\x40\x50\x1a\x92\xbd\xf5\x07\xfe\x3b\xa1\x59\xd2\x65\x65\x04\x0f\xd9\x34\x97\x24\xe5\xfa\xeb\x23\xe8\x0b\x35\x51\x29\xad\xf9\x22\x09\x2f\xd1\x45\x9f\xb9\x6f\x1c\xef\x16\x68\xeb\xb7\x78\xc2\xf3\x22\x0d\x98\xe0\x9d\x89\x4e\xbf\xa6\x1f\xfb\x53\x67\x4c\xa3\xd1\xb8\x13\x30\xe5\xe2\x0e\xc6\x9f\x3d\xbb\xd3\x2d\x2f\x32\xe0\x7b\x2e\x42\xe1\x5b\x36\xc6\xb9\x6c\x35\x31\xc3\x54\x83\x9a\xc8\xc3\x2a\x89\x49\x0f\x03\x1f\x48\xd2\xcb\x00\x42\x1a\xc5\x87\x89\x97\x44\x9d\xf5\xc6\x9d\xc9\xa7\xae\xa4\xd5\x59\xbf\x4b\xb9\xa6\x1f\xbe\x0a\xd6\xe8\x97\x73\xb0\x89\x85\xa7\xe7\x77\x78\x9e\xcf\x9e\xe7\xb3\x7f\x03\x00\x00\xff\xff\x9a\xf8\x75\x1c\x14\x05\x00\x00")

func noop_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_noop_tracerJs,
		"noop_tracer.js",
	)
}

func noop_tracerJs() (*asset, error) {
	bytes, err := noop_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "noop_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfe, 0x22, 0x6c, 0x45, 0x44, 0x8f, 0xa3, 0x24, 0x8e, 0xf9, 0x51, 0x92, 0x40, 0xea, 0xf7, 0x89, 0x1d, 0xe6, 0x7e, 0xc9, 0x3a, 0x3d, 0xb3, 0xa8, 0xc9, 0x6, 0xad, 0xe, 0x61, 0xba, 0x4e, 0x48}}
	return a, nil
}

var _opcount_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x41\x6f\xdb\x46\x10\x85\xcf\x12\xa0\xff\xf0\x8e\x09\xa2\x8a\x69\x7b\x28\xe0\x16\x05\x58\xc3\x4e\x04\xd8\xb2\x21\xd1\x09\x7c\x5c\x92\x43\x71\x9b\xd5\x2e\x31\x3b\x2b\x86\x08\xfc\xdf\x8b\x5d\x52\xb1\x10\xb8\x88\xaf\xd4\xcc\xf7\xde\xcc\x3c\x6d\x96\xe1\xd2\x75\x03\xeb\x7d\x2b\xf8\xed\xfd\xaf\x7f\xa0\x68\x09\x7b\xf7\x0b\x49\x4b\x4c\xe1\x80\x3c\x48\xeb\xd8\x2f\xe6\x59\x86\xa2\xd5\x1e\x8d\x36\x04\xed\xd1\x29\x16\xb8\x06\xf2\x43\x83\xd1\x25\x2b\x1e\x56\xb1\x63\xea\x7a\xb1\x20\x32\x1a\x26\x82\x77\x8d\xf4\x8a\xe9\x02\x83\x0b\xa8\x94\x05\x53\xad\xbd\xb0\x2e\x83\x10\xb4\x40\xd9\x3a\x73\x8c\x83\xab\x75\x33\x24\xa6\x16\x04\x5b\x13\x27\x75\x21\x3e\xf8\x93\x95\x0f\x9b\x07\xdc\x90\xf7\xc4\xf8\x40\x96\x58\x19\xdc\x87\xd2\xe8\x0a\x37\xba\x22\xeb\x09\xca\xa3\x8b\x5f\x7c\x4b\x35\xca\x91\x17\x3b\xaf\xa3\x99\xdd\x64\x06\xd7\x2e\xd8\x5a\x89\x76\x76\x09\xd2\xd1\x3b\x8e\xc4\x5e\x3b\x8b\xdf\x4f\x5a\x13\x71\x09\xc7\x89\xf2\x46\x49\x9c\x81\xe1\xba\xd8\xf8\x16\xca\x0e\x30\x4a\x9e\x7b\x5f\xb5\x95\xe7\xe1\x6b\x68\x9b\x94\x5a\xd7\x11\xa4\x55\x12\x27\xef\xb5\x31\x28\x09\xc1\x53\x13\xcc\x32\xe1\xca\x20\xf8\xbc\x2e\x3e\xde\x3d\x14\xc8\x37\x8f\xf8\x9c\x6f\xb7\xf9\xa6\x78\xfc\x13\xbd\x96\xd6\x05\x01\x1d\x69\x64\xe9\x43\x67\x34\xd5\xe8\x15\xb3\xb2\x32\xc0\x35\x09\x71\x7b\xb5\xbd\xfc\x98\x6f\x8a\xfc\x9f\xf5\xcd\xba\x78\x84\x63\x5c\xaf\x8b\xcd\xd5\x6e\x87\xeb\xbb\x2d\x72\xdc\xe7\xdb\x62\x7d\xf9\x70\x93\x6f\x71\xff\xb0\xbd\xbf\xdb\x5d\xad\xb0\xa3\xe8\x8b\x12\xe0\xe7\xab\x6f\xd2\x15\x99\x50\x93\x28\x6d\xfc\xf3\x3a\x1e\x5d\x80\x6f\x5d\x30\x35\x5a\x75\x24\x30\x55\xa4\x8f\x54\x43\xa1\x72\xdd\xf0\xea\xeb\x26\x98\x32\xce\xee\xd3\xe0\xff\x9b\x4e\xac\x1b\x58\x27\x4b\x78\x22\xfc\xd5\x8a\x74\x17\x59\xd6\xf7\xfd\x6a\x6f\xc3\xca\xf1\x3e\x33\x23\xcf\x67\x7f\xaf\x16\xf3\x44\x75\x5d\xe5\x82\x95\x82\x55\x45\x1c\xef\xa4\xe0\xd5\xa1\x33\x04\x19\x3f\xa5\xfb\xfc\x1b\xbc\x20\x15\xfa\x24\x6e\xc3\xa1\x24\x8e\xfe\xb5\xf5\xc2\xa1\x8a\xc9\x18\xff\x4e\xf4\x95\xaa\x74\xe4\x72\x48\xa5\x57\x9f\x6e\x51\x52\x13\xf7\x93\x62\xcd\xca\x7a\x95\xea\x53\xc4\xb5\x55\x42\xf5\x6a\x31\xff\xb6\x98\xcf\xb2\x6c\x14\x49\xda\x5f\x7e\x94\x8a\xa4\x73\xb9\xef\x52\xab\xc5\x7c\x96\xfa\x2e\xf0\x7e\x19\xe7\x8a\x20\x2f\xd4\xc5\x79\xb4\x3d\xba\x2f\x54\xa7\x2b\xd1\x91\x78\x48\x23\xd7\x53\xf0\xa2\xc2\xa7\xdb\x13\x29\x9e\x6e\x16\x1b\x2f\xd0\x04\x9b\x54\xde\x18\xb7\x5f\xa2\x2e\xdf\xe2\x1b\xa4\xd5\x7e\x95\x84\xde\xbd\xc3\xd3\x77\xa5\x46\x05\x23\xe7\x52\x7d\x3b\x85\x52\x55\x12\x94\x99\xe8\x71\x62\xd7\x40\xd9\x93\x81\x66\x0a\xcb\x2c\x01\x5e\x96\x7c\x56\x61\xf2\x2f\xc9\x28\x63\x92\xd4\xc8\xf4\x63\xce\x4a\x22\x0b\x2d\xc4\x71\xb7\x70\x47\xe2\xf8\xda\x80\x49\x02\xc7\x33\xcd\xa6\xc7\xa1\xd1\x56\x99\x13\x79\x0a\x63\x5c\xbd\xb6\xfb\xe8\x6b\xfc\xe1\xcc\x58\x25\x5f\x4f\xc6\x46\xd6\xd9\x4a\xf0\xb4\x98\x3f\x2d\xe6\xff\x05\x00\x00\xff\xff\x05\x81\x8c\x3c\x7c\x05\x00\x00")

func opcount_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_opcount_tracerJs,
		"opcount_tracer.js",
	)
}

func opcount_tracerJs() (*asset, error) {
	bytes, err := opcount_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "opcount_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3, 0x99, 0xc9, 0xeb, 0x5f, 0xf8, 0xa6, 0x7a, 0xf3, 0xd9, 0x44, 0xdb, 0x27, 0xf1, 0xf7, 0xec, 0x31, 0x90, 0x49, 0x6d, 0x63, 0x46, 0x6e, 0x5f, 0x6b, 0x8, 0x43, 0x9a, 0x38, 0x7a, 0x9d, 0x61}}
	return a, nil
}

var _prestate_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\xdd\x6f\x22\x39\x12\x7f\x4e\xa4\xfc\x0f\xa5\x79\x01\x6e\x98\x66\x92\x95\xf6\x24\x72\x39\xa9\x87\x61\x66\x22\xb1\x49\x04\xe4\x72\xb9\xd5\x3e\xb8\xed\xea\xc6\x8b\xb1\x5b\xfe\x80\x70\xab\xfc\xef\xab\x72\x77\xf3\x35\x24\x93\xdd\x37\xda\xae\xfa\xb9\x3e\x7f\x55\xf4\x7a\x30\x30\xe5\xda\xca\x62\xe6\xe1\xe2\xe3\xf9\x3f\x61\x3a\x43\x28\xcc\x07\xf4\x33\xb4\x18\x16\x90\x06\x3f\x33\xd6\x9d\x9d\xf6\x7a\x30\x9d\x49\x07\xb9\x54\x08\xd2\x41\xc9\xac\x07\x93\x83\x3f\x50\x50\x32\xb3\xcc\xae\x13\xd2\xa8\xb5\x8e\x0a\x10\x46\x6e\x11\xc1\x99\xdc\xaf\x98\xc5\x3e\xac\x4d\x00\xce\x34\x58\x14\xd2\x79\x2b\xb3\xe0\x11\xa4\x07\xa6\x45\xcf\x58\x58\x18\x21\xf3\x75\xc4\x94\x1e\x82\x16\x68\xe3\xeb\x1e\xed\xc2\x35\xa6\x7c\xbd\xb9\x87\x11\x3a\x87\x16\xbe\xa2\x46\xcb\x14\xdc\x85\x4c\x49\x0e\x23\xc9\x51\x3b\x04\xe6\xa0\xa4\x13\x37\x43\x01\x59\x85\x47\x9a\x5f\xc8\x98\x49\x6d\x0c\x7c\x31\x41\x0b\xe6\xa5\xd1\x5d\x40\x49\xb6\xc3\x12\xad\x93\x46\xc3\x4f\xcd\x5b\x35\x62\x17\x8c\x8d\x28\x6d\xe6\xc9\x07\x0b\xa6\x24\xc5\x0e\x30\xbd\x06\xc5\xfc\x56\xf7\x4d\x51\xd9\x3a\x2f\x40\xea\xf8\xd2\xcc\x94\x08\x7e\xc6\x3c\x79\xbe\x92\x4a\x41\x86\x10\x1c\xe6\x41\x75\x23\x5c\x16\x3c\x3c\x5c\x4f\xbf\xdd\xde\x4f\x21\xbd\x79\x84\x87\x74\x3c\x4e\x6f\xa6\x8f\x97\xb0\x92\x7e\x66\x82\x07\x5c\x62\x85\x25\x17\xa5\x92\x28\x60\xc5\xac\x65\xda\xaf\xc1\xe4\x11\xe2\x97\xe1\x78\xf0\x2d\xbd\x99\xa6\x9f\xae\x47\xd7\xd3\x47\x30\x16\xbe\x5c\x4f\x6f\x86\x93\x09\x7c\xb9\x1d\x43\x0a\x77\xe9\x78\x7a\x3d\xb8\x1f\xa5\x63\xb8\xbb\x1f\xdf\xdd\x4e\x86\x09\x4c\x90\xec\xc2\x08\xf0\xe3\xd0\xe7\x31\x8b\x16\x41\xa0\x67\x52\xb9\x6d\x38\x1e\x4d\x00\x37\x33\x41\x09\x98\xb1\x25\x82\x45\x8e\x72\x89\x02\x18\x70\x53\xae\xdf\x9c\xdd\x08\xc6\x94\xd1\x45\x74\xfc\xc5\xea\x84\xeb\x1c\xb4\xf1\x5d\x70\x88\xf0\xaf\x99\xf7\x65\xbf\xd7\x5b\xad\x56\x49\xa1\x43\x62\x6c\xd1\x53\x15\x9e\xeb\xfd\x3b\x39\x3b\x8d\xa8\xa5\x45\xe7\x99\xc7\xa9\x65\x1c\x2d\x98\xe0\xcb\xe0\x1d\xb8\x90\xe7\x92\x4b\xd4\x1e\xa4\xce\x8d\x5d\xc4\xa2\x01\x6f\x80\x5b\x64\x1e\x81\x81\x32\x9c\x29\xc0\x27\xe4\x21\xde\xd5\x01\x8f\xb5\x6b\x99\x76\x8c\xc7\xe3\xdc\x9a\x05\xf9\x1b\x9c\xa7\x1f\xce\xe1\x22\x53\x28\xa0\x40\x8d\x4e\x3a\xc8\x94\xe1\xf3\xe4\xec\xf4\x8f\xb3\xd3\x93\x1d\x7b\xa8\x64\xa2\x9b\xb5\x58\x2c\x93\x15\xb6\x2c\x42\x16\xa4\x12\x52\x17\xc9\xd9\xe9\x49\x23\xde\x07\x1d\x14\x55\x4d\x85\xa2\x8c\x99\x87\x32\xe5\xdc\x84\xe8\xc1\xef\xc8\x7d\x85\xe7\x4a\xe4\x32\xa7\x4a\x61\x9b\x5b\x6f\xe2\xd5\xe6\x69\x93\x91\x3c\xc1\xef\xe1\xf4\x21\x0f\x3a\x3a\xd5\x66\x42\xd8\x2e\x88\xac\x43\x56\x9f\x2c\x99\x25\x34\xb8\x02\x6f\xbe\xe1\x53\xbc\xed\x5c\xd2\x8d\xcc\xa1\xed\x67\xd2\x25\x0d\xf6\xaf\x8c\xf3\xdf\xe0\xea\xea\x2a\x76\x7a\x2e\x35\x8a\x0e\x44\x90\x93\x63\x72\xf5\xd5\x49\xc6\x14\xd3\x1c\xfb\xd0\xfa\xf8\xd4\x82\xf7\x20\xb2\xa4\x40\xff\xa9\x3a\xad\xde\x4b\xbc\x99\x78\x2b\x75\xd1\x3e\xff\xb9\xd3\xad\xd4\xb4\x89\x4a\x50\xcb\xdf\x98\x8d\x74\x2d\xc0\x8d\x88\xf7\xb5\xe1\x95\xd8\xc0\x88\x5a\xaa\x11\x73\xde\x58\x56\x60\x1f\xfe\x78\x8e\x07\xcf\xd1\x39\xfa\xfd\x7c\x10\xf2\x49\x25\xf9\x42\xc8\x6b\x1c\x40\xed\xed\xa6\xfa\x0b\x49\x3d\xbc\x9b\x8d\x0a\xf0\xd5\x94\x4c\x1a\x8b\x0e\x52\x32\xc7\xf5\x5b\xf2\x42\x37\x52\x3c\x6d\x6e\xe6\xb8\xa6\x8b\x97\x53\x96\xd4\xa6\xff\x2a\xc5\xd3\x9b\xf3\x77\xa0\xb4\x17\xe4\x09\x49\x6d\x8d\xee\x74\x8e\x84\xd4\xa2\x0b\xca\x53\x27\x48\xbd\x34\x73\x62\xb7\x19\x85\x4a\xa9\x18\x1c\x53\x52\xfa\x5c\x45\x2d\x19\xa2\x06\xe9\xd1\x32\x22\x58\xb3\x44\x4b\x03\x06\x2c\xfa\x60\xb5\xdb\x46\x34\x97\x9a\xa9\x06\xb9\xce\x80\xb7\x8c\xd7\xfd\x54\x5d\xec\x84\x95\xfb\xa7\x18\xd0\xca\xc9\x5e\x0f\x52\x0f\xe4\x29\x94\x46\x6a\xdf\x85\x15\x82\x46\x14\xc4\x0c\x02\x45\xe0\x3e\x22\xb6\x96\x4c\x05\x6c\x55\xcd\x1f\x99\x34\xea\x9a\x40\x53\x63\x87\x1d\xba\xd1\xc8\x85\x59\xc6\x89\x98\x31\x3e\x87\xba\x19\x8d\x95\x85\xd4\xa4\x17\xe3\xba\xd7\x88\x64\x54\x42\xd0\xd1\xb2\x3a\x6f\x94\x52\x3a\xfb\xc4\x14\x5c\x41\x26\x8b\x6b\xed\x0f\x12\x59\xc5\xbf\x51\xee\xfc\x96\xd4\x6d\x95\x38\xe2\xc5\xf6\x45\xa7\x0b\xe7\x3f\x6f\x0b\xc4\x1b\xc2\x82\x1f\xa3\x79\xf3\x0a\xd6\xc6\x85\x1f\x28\xc6\x87\xa8\xbd\xdf\xc7\x77\x13\x17\x32\xca\x4b\xe5\x6c\x0c\xe7\x7e\x8b\x5f\xbe\x06\xbc\xef\x5f\x03\x5c\x87\x27\x61\x42\xec\xa2\xd2\x67\xfc\x2e\x98\xbb\x77\x28\xe0\x3d\xd0\x97\xd4\xf4\x96\x93\xfc\x2b\x73\x1d\xf8\x07\xd4\x12\x77\x56\xf2\xef\x4d\xa9\x13\xfc\x19\xb9\xc5\x05\x4d\x0d\xca\x21\x67\x4a\xa1\x6d\x39\x88\x3c\xd4\xad\x0b\x32\x66\x1b\x17\xa5\x5f\x37\xb3\xc4\x33\x5b\xa0\x77\x6f\x70\x28\x02\x7d\xf8\xb0\xe1\xd6\x18\xc4\x75\x89\x70\x75\x05\xad\xc1\x78\x98\x4e\x87\xad\xa6\x1f\x7b\x3d\x78\xc0\xb8\x79\x65\x4a\x66\x42\xad\x41\xa0\x42\x8f\x95\x69\x46\xc7\xe8\x6e\x18\xa6\x4b\x1b\x14\x6d\x36\xf8\x24\x9d\x97\xba\x80\x8a\x78\x56\x34\xbd\x1b\xbc\xd8\x69\x9c\x05\x0a\xd2\xe1\x9c\xf3\x86\xb6\x17\x8b\xc4\x53\x34\x5d\x62\xd3\x32\x25\x37\xdb\x4e\x2e\xad\xf3\x50\x2a\xc6\x31\x89\x80\x1b\x73\x5e\x2e\x8e\x0d\x29\xd0\xeb\xe3\xd8\xcb\x11\x6b\x3b\x46\x99\xa2\x39\x4c\x16\x38\x68\x37\x28\x1d\xd2\xb0\x8d\xf8\x0e\xfc\xe5\x1e\xbf\x38\x8f\xe5\x2e\xbb\xd0\x22\x83\x4b\x24\x6a\x8e\xd4\x52\x0d\x5d\x7a\xef\x3f\xbf\xd4\x83\x1e\x69\xbb\x39\x21\xc5\x1d\x8e\x50\xa6\x38\xe0\x08\x51\xc5\x87\x07\x6b\xa9\x18\x36\xe4\x9e\x13\x5f\xfc\x1e\x9c\xa7\xe8\x5a\x8a\x53\xcd\x3d\x47\x99\x37\xf2\x2c\xcd\xf5\xce\x11\x86\xa5\xe1\x58\xcd\x21\x7a\xb1\x1e\x85\xd5\x16\x59\x1a\x8f\xda\x4b\xa6\xd4\x9a\x72\xb2\xb2\xb4\x38\xd1\xaa\xd4\x05\x27\x49\x2a\x12\x58\x14\x95\x9a\xab\x20\xaa\x9a\x88\xed\xd0\x00\xba\x68\xf7\xfe\xca\xb5\x40\xe7\x58\x81\x09\xd5\x55\x2e\x9f\xea\xd5\x55\x43\xab\x62\xcd\x76\xa7\x95\x6c\xed\xdc\x67\x2c\x65\x8a\xa4\xa9\x39\xa2\xff\x54\x08\x8b\xce\xb5\x3b\x0d\x85\x6d\xd3\xfc\x30\x43\x4d\x59\x00\x8d\x2b\xd8\xec\x42\x8c\x73\xda\x10\x45\x17\x98\x10\x44\x96\x07\x4b\x0b\x29\xbb\x95\xf4\x7c\x06\xf1\x31\x53\x6e\x5b\xb4\xd3\xb4\x04\x67\x0e\xe1\xdd\xf0\xbf\xd3\xc1\xed\xe7\xe1\xe0\xf6\xee\xf1\x5d\x1f\xf6\xce\x26\xd7\xff\x1b\x6e\xce\x3e\xa5\xa3\xf4\x66\x30\x7c\xd7\xaf\x96\x80\x23\x5e\x79\xd3\xf8\x41\x4f\x3a\xcf\xf8\x3c\x29\x11\xe7\xed\x8f\xfb\x04\xb1\xe3\xe5\xc9\x49\x66\x91\xcd\x2f\x77\xec\xa9\xfa\xb6\x79\xa6\xe1\x71\xb8\x82\x17\x83\x76\xf9\x8a\x45\x83\x5a\xa1\xdd\x0c\x88\xed\xe6\x13\x49\xe4\x2d\xb6\x5c\xfc\x0d\x63\x62\x3f\x31\x3e\xef\x83\x63\x8a\x56\x70\xf9\x7f\xfa\x0f\x95\xe7\x0e\x7d\x17\x50\x0b\xb3\x22\x62\xdc\xe2\x56\x57\x35\xf2\x4e\xec\xce\x3b\x15\x31\xdf\xe6\xed\xce\x56\x9a\xe0\xbe\x97\xbd\x38\x2a\x8b\x5a\xc0\x55\x83\xff\x3e\xaa\xbe\x21\x60\x17\x75\xc4\x0e\x9e\xf8\xe9\x60\xb3\x8c\xf7\x0b\x5c\x18\xbb\xae\x67\xdd\x8e\x8f\x3f\x8a\x6e\x3a\x1a\x6d\xca\x8b\x3e\xa8\xe6\x36\x07\x9f\x87\xa3\xe1\xd7\x74\x3a\xdc\x93\x9a\x4c\xd3\xe9\xf5\xa0\x3a\xfa\xeb\x75\x78\xfe\x17\xea\xb0\x35\x99\x4c\x6f\xc7\xc3\x56\xbf\xfe\x1a\xdd\xa6\x9f\x5b\xdf\xbf\x59\x6f\x9e\xaf\x75\xb4\x37\x0f\xc6\x8a\xbf\xd7\x13\xfb\x1b\x60\xce\x8e\x2d\x80\x71\x02\x70\x1f\x0e\xfe\x7e\x01\xd3\x0d\x71\xe7\xf5\xff\xd0\x93\x08\x70\x94\xaa\x9f\xcf\x4e\x9f\xcf\x4e\xff\x0c\x00\x00\xff\xff\x6e\x18\x0d\x75\x2b\x11\x00\x00")

func prestate_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_prestate_tracerJs,
		"prestate_tracer.js",
	)
}

func prestate_tracerJs() (*asset, error) {
	bytes, err := prestate_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prestate_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0xf3, 0x35, 0x77, 0x95, 0x92, 0x8b, 0x99, 0x49, 0x3b, 0xd5, 0x5c, 0xa4, 0x97, 0x45, 0xb2, 0x74, 0xf3, 0x6b, 0x54, 0x13, 0xa9, 0xc3, 0x29, 0xeb, 0x5d, 0xa3, 0xba, 0x53, 0x2e, 0xef, 0x38}}
	return a, nil
}

var _trigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x95\x4f\x6f\xe3\x36\x10\xc5\xef\x06\xfc\x1d\x5e\x4f\x4e\x10\xaf\x95\xb4\x97\xc2\xa9\x0b\xb8\xd9\x64\xd7\x40\xd6\x0e\x6c\xa7\x8b\x20\xc8\x81\x96\x46\x12\x11\x9a\x14\xc8\xa1\xbd\x42\x90\xef\x5e\x50\x92\xff\xc2\xdb\x4d\x4e\xc1\x70\xde\x6f\xde\x0c\x47\x74\x14\xe1\xc6\x14\xa5\x95\x59\xce\xf8\xfd\xf2\xea\x4f\xcc\x73\x42\x66\x3e\x11\xe7\x64\xc9\x2f\x31\xf4\x9c\x1b\xeb\xda\xad\x28\xc2\x3c\x97\x0e\xa9\x54\x04\xe9\x50\x08\xcb\x30\x29\xf8\x48\xa0\xe4\xc2\x0a\x5b\xf6\x82\xa2\x51\x9d\x4c\x08\x8c\xd4\x12\xc1\x99\x94\xd7\xc2\x52\x1f\xa5\xf1\x88\x85\x86\xa5\x44\x3a\xb6\x72\xe1\x99\x20\x19\x42\x27\x91\xb1\x58\x9a\x44\xa6\x65\xc5\x94\x0c\xaf\x13\xb2\x55\x75\x26\xbb\x74\x1b\x2b\x5f\xc6\x8f\xb8\x27\xe7\xc8\xe2\x0b\x69\xb2\x42\xe1\xc1\x2f\x94\x8c\x71\x2f\x63\xd2\x8e\x20\x1c\x8a\x10\x71\x39\x25\x58\xd4\xbc\xa0\xbc\x0b\x66\x66\x8d\x19\xdc\x19\xaf\x13\xc1\xd2\xe8\x2e\x48\x06\xef\x58\x91\x75\xd2\x68\xfc\xb1\xa9\xd5\x10\xbb\x30\xb6\xa2\x9c\x09\x0e\x3d\x58\x98\x22\x08\xcf\x21\x74\x09\x25\x78\xa7\xfd\xd0\x54\x76\xcd\x27\x90\xba\xaa\x94\x9b\x82\xc0\xb9\xe0\xd0\xf9\x5a\x2a\x85\x05\xc1\x3b\x4a\xbd\xea\x56\xb8\x85\x67\x7c\x1f\xcd\xbf\x4e\x1e\xe7\x18\x8e\x9f\xf0\x7d\x38\x9d\x0e\xc7\xf3\xa7\x6b\xac\x25\xe7\xc6\x33\x68\x45\x35\x4b\x2e\x0b\x25\x29\xc1\x5a\x58\x2b\x34\x97\x30\x69\x85\xf8\x76\x3b\xbd\xf9\x3a\x1c\xcf\x87\xff\x8c\xee\x47\xf3\x27\x18\x8b\xbb\xd1\x7c\x7c\x3b\x9b\xe1\x6e\x32\xc5\x10\x0f\xc3\xe9\x7c\x74\xf3\x78\x3f\x9c\xe2\xe1\x71\xfa\x30\x99\xdd\xf6\x30\xa3\xe0\x8b\x2a\xc0\xaf\x47\x9f\x56\xb7\x68\x09\x09\xb1\x90\xca\xed\xc6\xf1\x64\x3c\x5c\x6e\xbc\x4a\x90\x8b\x15\xc1\x52\x4c\x72\x45\x09\x04\x62\x53\x94\x1f\xbe\xdd\x0a\x26\x94\xd1\x59\xd5\xf8\x4f\xb7\x13\xa3\x14\xda\x70\x17\x8e\x08\x7f\xe5\xcc\x45\x3f\x8a\xd6\xeb\x75\x2f\xd3\xbe\x67\x6c\x16\xa9\x9a\xe7\xa2\xbf\x7b\xed\x56\xbb\xf5\xd6\x6e\x01\x40\x14\x21\x97\x8e\xc3\x2d\x05\xf2\x52\x14\x95\x33\x2b\x33\x2b\x96\x88\x8d\xd7\x4c\xe1\x63\x09\xb9\x21\xb1\x8f\xb7\xf7\xee\x56\xaa\x84\xe3\x49\x11\xc4\xe1\x3f\x98\x82\x6c\xb5\x61\x75\x42\x7d\xea\xfa\x78\xee\x74\xba\x9d\xce\x4b\x77\x17\xfe\x4c\x05\xe7\x7d\x5c\x36\xa1\x06\xe7\x98\x2a\x98\xd4\x2b\xf3\x4a\x49\x35\x5d\x5a\x91\x2d\x61\x8a\xd8\x24\xcd\xc2\x04\x9f\xff\x7e\x03\xfd\xa0\xd8\x33\x85\x91\x07\x79\xd0\xf6\x91\x7a\x1d\x07\x03\x67\xca\x64\x5d\x24\x8b\x73\xbc\xed\x2a\xac\x84\x45\x12\x0a\x63\x00\x65\xb2\x5e\x46\xb5\x8f\xb3\xf3\xeb\x5d\x92\x4c\x71\x56\x27\xfd\x36\x00\xe7\xd2\xf5\xb6\x7e\xcf\xf7\x58\xe1\x6f\x7b\x3a\x29\x1c\x06\x9b\x2e\xaf\x7f\x92\xf4\xb9\xa9\x5c\xc1\x8f\x92\x2c\xb1\xb7\x7a\x2f\xf8\x7e\xe8\xda\x14\x8d\x65\x53\xf4\xd8\xcc\xd8\x4a\x9d\x1d\xb8\x0e\x49\xaf\x54\x62\x70\x60\xea\xf9\xf2\xe5\xa2\xf3\xa9\x73\x71\x10\xbb\xaa\x63\xa6\x38\x6a\xba\x4a\x0a\x57\xfc\xfc\x4a\xe5\xcb\xc9\x5e\xb7\xa7\x17\x17\xa7\xbd\x92\x72\x84\xff\x55\x62\x80\xab\xd3\xda\x23\xe3\xc7\xad\x5c\xed\x0f\xf6\xe8\x04\x03\x6c\xdb\xd9\xdb\xce\x54\x78\xc5\xfb\xfb\xb4\xce\x9b\x17\x43\xc4\xec\x85\x6a\x56\x28\xbc\x80\x26\x85\xd0\x9b\x2d\x4b\x9b\x2f\x39\x60\x2a\xc6\xc9\xbd\xda\x2b\x64\xc9\x9d\xaa\x24\x94\xaa\xaa\xd5\x58\x57\xbf\x03\x0b\x22\x0d\xc9\xe1\x43\xa1\x04\x66\x45\x36\xfc\x1a\x34\x1b\xe0\xb6\xc8\xa0\x4b\xa5\x16\x6a\x03\x6f\xde\x0b\xb6\x22\x96\x3a\x6b\xdc\xd5\x67\x7b\xf6\x62\xfe\x71\xb0\xf2\x35\x76\x77\x07\x7b\x43\x7a\x6f\xb7\xfe\x0b\x00\x00\xff\xff\x17\x7c\x4f\x29\x2d\x07\x00\x00")

func trigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_trigram_tracerJs,
		"trigram_tracer.js",
	)
}

func trigram_tracerJs() (*asset, error) {
	bytes, err := trigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x53, 0x42, 0xf8, 0x6b, 0x16, 0xc5, 0xa8, 0x5c, 0xec, 0x48, 0xfd, 0x3f, 0xa, 0x1a, 0xf0, 0x17, 0x15, 0x2f, 0x31, 0xf4, 0x2e, 0xb1, 0x8a, 0x81, 0x73, 0xc5, 0x49, 0x7a, 0xbe, 0x29, 0x87, 0x44}}
	return a, nil
}

var _unigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x41\x6f\xdb\x46\x10\x85\xef\x02\xf4\x1f\xde\xd1\x46\x54\x31\x69\x2f\x85\xd2\x14\x50\x0d\x3b\x11\xe0\xc8\x86\x44\x37\x30\x8a\x1e\x96\xe4\x90\x5c\x74\xb5\x43\xec\xce\x4a\x11\x02\xff\xf7\x62\x28\xca\x52\x0a\xb7\x35\x4f\x86\x77\xde\x37\x33\x6f\xdf\x2a\xcb\x70\xc5\xdd\x3e\xd8\xa6\x15\xfc\xf8\xf6\xdd\xcf\xc8\x5b\x42\xc3\x3f\x90\xb4\x14\x28\x6d\x30\x4f\xd2\x72\x88\xe3\x51\x96\x21\x6f\x6d\x44\x6d\x1d\xc1\x46\x74\x26\x08\xb8\x86\xfc\x43\xe0\x6c\x11\x4c\xd8\x4f\x55\x31\xa8\x5e\x2c\x50\x46\x1d\x88\x10\xb9\x96\x9d\x09\x34\xc3\x9e\x13\x4a\xe3\x11\xa8\xb2\x51\x82\x2d\x92\x10\xac\xc0\xf8\x2a\xe3\x80\x0d\x57\xb6\xde\xf7\x4c\x2b\x48\xbe\xa2\xd0\x77\x17\x0a\x9b\x78\x1c\xe5\xe3\xf2\x01\xb7\x14\x23\x05\x7c\x24\x4f\xc1\x38\xdc\xa7\xc2\xd9\x12\xb7\xb6\x24\x1f\x09\x26\xa2\xd3\xff\xc4\x96\x2a\x14\x07\x9e\x2a\x6f\x74\x98\xf5\x30\x0c\x6e\x38\xf9\xca\x88\x65\x3f\x01\x59\x9d\x1d\x5b\x0a\xd1\xb2\xc7\x4f\xc7\x5e\x03\x71\x02\x0e\x3d\xe5\xc2\x88\xee\x10\xc0\x9d\x0a\x2f\x61\xfc\x1e\xce\xc8\x49\xfb\x2a\x57\x4e\xcb\x57\xb0\xbe\xef\xd4\x72\x47\x90\xd6\x88\x6e\xbe\xb3\xce\xa1\x20\xa4\x48\x75\x72\x93\x1e\x57\x24\xc1\x97\x45\xfe\xe9\xee\x21\xc7\x7c\xf9\x88\x2f\xf3\xd5\x6a\xbe\xcc\x1f\xdf\x63\x67\xa5\xe5\x24\xa0\x2d\x1d\x58\x76\xd3\x39\x4b\x15\x76\x26\x04\xe3\x65\x0f\xae\x7b\xc4\xe7\xeb\xd5\xd5\xa7\xf9\x32\x9f\xff\xb6\xb8\x5d\xe4\x8f\xe0\x80\x9b\x45\xbe\xbc\x5e\xaf\x71\x73\xb7\xc2\x1c\xf7\xf3\x55\xbe\xb8\x7a\xb8\x9d\xaf\x70\xff\xb0\xba\xbf\x5b\x5f\x4f\xb1\x26\x9d\x8b\x7a\xc0\xff\x5b\x5f\xf7\xb7\x18\x08\x15\x89\xb1\x2e\x9e\xec\x78\xe4\x84\xd8\x72\x72\x15\x5a\xb3\x25\x04\x2a\xc9\x6e\xa9\x82\x41\xc9\xdd\xfe\xd5\xb7\xdb\xc3\x8c\x63\xdf\xf4\x8b\xff\x6b\x3a\xb1\xa8\xe1\x59\x26\x88\x44\xf8\xa5\x15\xe9\x66\x59\xb6\xdb\xed\xa6\x8d\x4f\x53\x0e\x4d\xe6\x0e\xbc\x98\xfd\x3a\x1d\x8f\xc6\xa3\x6f\xe3\x11\x00\x64\x19\x5a\x1b\x45\x6f\x49\xc9\x1b\xd3\xe9\x64\xdc\x95\x5c\x51\x84\x30\x4a\x4e\x5e\x48\xdf\x8b\x96\x6b\xed\x0c\xdf\x9e\x26\xcf\x6a\xcf\x5d\x3c\x14\x45\xf8\xb4\x29\x28\x1c\x00\x83\x40\x8f\x67\x78\x7b\xaa\x8f\x42\x9d\x76\xb3\x7e\xcb\x7f\x51\xd5\x3b\x48\x5b\x0a\xfb\xa1\xe9\x21\x14\x3a\xcb\xef\x9f\x41\x5f\xa9\x4c\x42\x6a\xab\xca\x55\x3b\x43\x9d\x7c\xa9\x69\xbc\x70\xdc\x4c\x50\x15\x97\x18\x76\xd1\x6f\x6b\x34\xac\xf8\x00\xc7\xcd\x94\xbb\xa9\xf0\x5a\x82\xf5\xcd\xc5\xe5\xfb\x53\x91\xad\x71\x21\xad\x8d\x53\x5d\xe7\x0f\xee\xfe\xbc\x3c\x23\xe8\xf7\xdd\xe1\x9b\x37\x67\xd2\xa7\xd3\x9f\xe4\x22\xe1\xbf\x84\xf8\x80\x77\x2f\x4b\xfb\x32\xb5\xe6\x99\x7d\xe6\x68\x6d\x92\x93\x73\x8b\x76\xed\x10\x74\x53\x4a\x32\x6e\x70\x45\x1f\x2e\xd7\x30\xfe\x68\x5c\x3d\x04\x50\x31\x3d\xe3\x45\xab\xb4\xd1\x73\xab\x40\xf1\xa5\x5e\xc6\xb9\xbe\xdf\x31\x06\x7d\x80\x0b\x22\x0f\x2b\x14\x8c\x3e\x63\xde\x52\xd0\x9f\x31\x04\x92\x14\x7c\x7c\x46\xaa\xae\xb6\xde\xb8\x23\x7c\x08\xba\x04\x53\x5a\xdf\x0c\xf3\x1d\xce\xce\x06\x2c\xe5\xeb\x77\xf7\x78\xc0\x9e\xfc\x3c\xb3\xe9\x69\x3c\xfa\x3b\x00\x00\xff\xff\xe3\x40\x77\x6d\xe6\x05\x00\x00")

func unigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_unigram_tracerJs,
		"unigram_tracer.js",
	)
}

func unigram_tracerJs() (*asset, error) {
	bytes, err := unigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "unigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6e, 0x71, 0x69, 0xc, 0x68, 0x22, 0x1f, 0x9e, 0x74, 0x9, 0xff, 0x73, 0x8a, 0xf7, 0xd7, 0x3, 0x73, 0xde, 0xab, 0x84, 0xe4, 0x6b, 0x55, 0x46, 0x57, 0xce, 0x35, 0x94, 0xae, 0xe7, 0xef, 0xd4}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"4byte_tracer_legacy.js": _4byte_tracer_legacyJs,
	"bigram_tracer.js":       bigram_tracerJs,
	"call_tracer_js.js":      call_tracer_jsJs,
	"call_tracer_legacy.js":  call_tracer_legacyJs,
	"evmdis_tracer.js":       evmdis_tracerJs,
	"noop_tracer.js":         noop_tracerJs,
	"opcount_tracer.js":      opcount_tracerJs,
	"prestate_tracer.js":     prestate_tracerJs,
	"trigram_tracer.js":      trigram_tracerJs,
	"unigram_tracer.js":      unigram_tracerJs,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"4byte_tracer_legacy.js": {_4byte_tracer_legacyJs, map[string]*bintree{}},
	"bigram_tracer.js":       {bigram_tracerJs, map[string]*bintree{}},
	"call_tracer_js.js":      {call_tracer_jsJs, map[string]*bintree{}},
	"call_tracer_legacy.js":  {call_tracer_legacyJs, map[string]*bintree{}},
	"evmdis_tracer.js":       {evmdis_tracerJs, map[string]*bintree{}},
	"noop_tracer.js":         {noop_tracerJs, map[string]*bintree{}},
	"opcount_tracer.js":      {opcount_tracerJs, map[string]*bintree{}},
	"prestate_tracer.js":     {prestate_tracerJs, map[string]*bintree{}},
	"trigram_tracer.js":      {trigram_tracerJs, map[string]*bintree{}},
	"unigram_tracer.js":      {unigram_tracerJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
